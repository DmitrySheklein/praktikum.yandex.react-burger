{"version":3,"sources":["pages/profile/profile-form.module.css","pages/feed/feed.module.css","components/order-modal-info/order-info.module.css","components/burger-ingredients/burger-ingredients.module.css","components/burger-constructor/burger-constructor.module.css","components/app-header/app-header.tsx","types/hooks.ts","services/constructor/constants.ts","services/constructor/selectors.ts","components/burger-ingredients/burger-ingredient.tsx","services/ingredients/constants.ts","services/ingredients/selectors.ts","components/preloader/preloader.tsx","components/burger-ingredients/burger-ingredients.tsx","components/modal/modal-overlay.tsx","components/modal/modal.tsx","images/done.png","services/order/constants.ts","services/order/selectors.ts","components/order-details/order-details.tsx","components/burger-constructor/empty-contstructor-element.tsx","services/constructor/action-type.ts","components/burger-constructor/contstructor-element.tsx","utils/constants.ts","utils/cookie.ts","services/order/actions.ts","services/auth/constants.ts","services/auth/selectors.ts","components/burger-constructor/burger-constructor.tsx","services/order/action-type.ts","services/ingredients/action-types.ts","utils/auth-api.ts","services/auth/action-type.ts","services/auth/actions.ts","pages/login-page.tsx","pages/register-page.tsx","pages/forgot-password-page.tsx","pages/reset-password-page.tsx","pages/profile/profile-sidebar.tsx","services/user/constants.ts","services/user/selectors.ts","services/user/actions-type.ts","pages/profile/profile-edit.tsx","types/data.ts","services/user/actions.ts","services/websoket/constants.ts","services/websoket/selectors.ts","utils/getTotalSum.ts","utils/formatStatusOrder.ts","utils/formateDate.ts","components/order-list/order-list.tsx","pages/profile/profile-orders.tsx","components/order-modal-info/order-modal-info.tsx","pages/profile/profile-page.tsx","pages/404-page.tsx","pages/feed/feed-page.tsx","components/protected-route.tsx","components/ingredient-details/ingredient-details.tsx","components/auth-protected-route.tsx","components/app/app.tsx","services/websoket/socketMiddleware.ts","services/ingredients/actions.ts","reportWebVitals.ts","services/ingredients/reducer.ts","services/constructor/reducer.ts","services/order/reducer.ts","services/auth/reducer.ts","services/user/reducer.ts","services/websoket/reducer.ts","services/rootReducer.ts","services/websoket/action-type.ts","services/store.ts","index.tsx","pages/profile/profile-sidebar.module.css","components/app-header/app-header.module.css","components/order-list/order-list.module.css","components/modal/modal.module.css","components/ingredient-details/ingredient-details.module.css","pages/page.module.css","pages/profile/profile.module.css","components/app/app.module.css","components/preloader/preloader.module.css","components/order-details/order.module.css"],"names":["module","exports","AppHeader","className","styles","header","headerContainer","headerMenu","to","exact","headerLink","activeClassName","active","type","logoWrap","useSelector","selectorHook","useDispatch","dispatchHook","ADD_BUN","ADD_INGREDIENT","REMOVE_INGREDIENT","RESET_CONSTRUCTOR","UPDATE_CONSTRUCTOR","getConstructorItems","store","BurgerIngredient","product","location","useLocation","orderState","getCurrentCount","useMemo","bun","ingredients","reduce","acc","current","_id","useDrag","item","collect","monitor","isDrag","isDragging","dragRef","ListItem","ref","ListItemLink","pathname","state","background","count","size","ListImgWrap","src","image_large","alt","name","ListItemPriceWrap","ListItemPrice","price","ListItemName","LOAD_ITEMS","LOAD_ITEMS_SUCCESS","LOAD_ITEMS_FAILED","getIngredients","ingredientsIsLoading","ingredientsRequest","Preloader","preloader","pulse","BurgerIngredients","loadingIngredients","productsData","useState","currentTab","setCurrentTab","categoryType","Array","from","Set","map","setTab","tab","element","document","getElementById","scrollIntoView","behavior","inViewOptions","threshold","trackVisibility","delay","useInView","bunRef","inViewBun","mainRef","inViewMain","sauceRef","inViewSauce","categoryTypeMap","sauce","main","useEffect","mainBlock","tabs","Object","entries","category","value","onClick","categoryBlock","length","categoryBlockItem","id","List","filter","ModalOverlay","clickHandler","modalOverlay","modalRoot","Modal","children","headerTitle","visible","setFunc","withHeader","handleEscClose","evt","key","addEventListener","removeEventListener","ReactDOM","createPortal","modal","show","modalBody","stopPropagation","title","modalCloseBtn","modalHeader","modalContent","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAILED","getOrder","orderInfo","order","isOrderRequest","orderRequest","OrderDetails","number","done","EmptyConstructorElement","position","style","constructorListItem","noBuns","addBunAction","addIngredientAction","ingredient","ConstructorSubElement","index","ingredientsLength","dispatch","useRef","useDrop","accept","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","opacity","drag","constructorSubListItem","cursor","text","thumbnail","image","handleClose","SERVER_URL","getCookie","matches","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","props","exp","path","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","SET_USER_DATA","SET_AUTH_CHECKING","SET_REGISTER_SENDING","SET_REGISTER_SEND_ERROR","SET_LOGIN_SENDING","SET_LOGIN_SEND_ERROR","SET_PASSWORD_FORGOT_EMAIL_SEND","SET_PASSWORD_FORGOT_CHANGED","SET_RESET_PASSWORD_FORGOT_ERROR","RESET_PASSWORD_FORGOT","getUser","data","getIsAuthChecking","authChecking","getRegisterError","registerError","getLoginError","loginError","getForgotPassword","forgotPassword","BurgerConstructor","user","isOrderLoading","startedOrder","setStartedOrder","totalOrderSum","prev","canDrop","dragItem","getItem","isHover","isOver","dropTarget","dragBuns","dragIngredients","outline","block","constructorList","isLocked","constructorSubList","uuid","constructorTotal","constructorTotalPrice","ingredientsId","bunId","orderData","a","fetch","method","headers","Authorization","body","JSON","stringify","res","isJson","get","indexOf","ok","Error","json","success","console","log","message","createOrder","IngredientsSuccessAction","IngredientsFailedAction","checkResponse","then","err","Promise","reject","fetchWithRefresh","url","options","token","localStorage","refreshData","setItem","refreshToken","accessToken","split","setUserData","setAuthChecking","setRegisterSendError","setLoginSendError","setPasswordForgotEmailSend","emailSend","payload","setPasswordForgotChanged","passwordChanged","setPasswordResetError","errorMessage","email","password","REQUEST_URL","isPasswordChange","Accept","error","toString","LoginPage","form","setValue","onChange","e","target","wrap","onSubmit","preventDefault","loginSending","login","formTitle","formField","formEmail","placeholder","errorText","formErrorMsg","formButton","formLinkItem","formLink","RegisterPage","registerSending","register","textAlign","ForgotPasswordPage","forgotPasswordObj","inputRef","focus","fromForgotPage","ResetPasswordPage","history","useHistory","formFieldNewPassword","ProfileSidebar","profileSidebar","sidebar","sidebarItem","sidebarLink","sidebarLinkCurrent","removeItem","sidebarSubText","UPDATE_USER_DATA","UPDATE_USER_DATA_SEND","UPDATE_USER_DATA_ERROR","getUpdatedUser","getUserUpdateSending","userUpdateSending","getUserUpdateError","userUpdateError","updateUserRequestAction","EStatus","ProfileEdit","updatedUser","stylesProfile","profileWrap","resolve","updateUser","icon","status","formButtonsContainer","formResetBtn","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","getWsMessages","messages","getTotalOrderSum","orderIngredients","find","el","formatStatusOrder","Created","Done","Pending","getFormattedDate","dayjs","isToday","format","isYesterday","fromNow","locale","extend","relativeTime","OrderList","orders","withOrderStatus","orderStatus","stylesOrderList","orderList","orderItem","orderModal","orderDate","createdAt","orderItemHeader","orderItemInfo","ingredientsList","productId","array","currentProduct","ingredientsListItem","ingredientsListItemCount","orderItemPrice","orderItemPriceNum","ProfileOrders","setOrders","withToken","profileOrders","OrderModalInfo","isModal","orderFull","setOrderFull","useParams","foundOrder","orderListObj","orderWrap","orderNum","left","orderName","productCount","orderListItem","itemImg","itemName","itemTotal","itemCount","itemPrice","orderFooter","orderTime","orderTotal","orderTotalPrice","ProfilePage","useRouteMatch","modalOrderOpen","action","profileContainer","goBack","ErrorPage404","FeedPage","total","setTotal","totalDay","setTotalDay","totalToday","ordersDone","slice","ordersPending","feedPage","feedPageContainer","feedPageCol","orderCol","orderColTitle","orderColList","orderColListItem","ready","totalBlockNum","ProtectedRoute","isAuthChecking","render","IngredientDetails","withAddButton","container","ImgWrap","statList","calories","proteins","fat","carbohydrates","statItem","statName","productType","AuthProtectedRoute","App","wsUrl","wsActions","modalIngredientOpen","appStyles","flex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ingredientsFailed","orderFailed","wsConnected","wsError","rootReducer","combineReducers","constructorBurger","uuidv4","deleted","dragCard","update","$splice","auth","currentUser","TWsActions","wsInit","onOpen","onClose","onError","onMessage","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","accessCookie","WebSocket","onopen","event","onerror","onmessage","parsedData","parse","onclose","createStore","DndProvider","backend","HTML5Backend","basename","process"],"mappings":"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","file":"static/js/main.d1a5f386.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"profile-form_profileWrap__2DSAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedPage\":\"feed_feedPage__2grFY\",\"feedPageContainer\":\"feed_feedPageContainer__3BOQS\",\"feedPageCol\":\"feed_feedPageCol__Cjtgd\",\"orderList\":\"feed_orderList__1MAez\",\"orders\":\"feed_orders__A_g2c\",\"orderCol\":\"feed_orderCol__3tzp7\",\"orderColTitle\":\"feed_orderColTitle__21Wc8\",\"orderColList\":\"feed_orderColList__3HXS-\",\"orderColListItem\":\"feed_orderColListItem__2YCBH\",\"ready\":\"feed_ready__37JN7\",\"totalBlock\":\"feed_totalBlock__269mP\",\"totalBlockNum\":\"feed_totalBlockNum__3u8qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderWrap\":\"order-info_orderWrap__VpZMf\",\"orderNum\":\"order-info_orderNum__3cRWv\",\"left\":\"order-info_left__3g1jN\",\"orderStatus\":\"order-info_orderStatus__18nNq\",\"complete\":\"order-info_complete__1wK_D\",\"orderList\":\"order-info_orderList__1C336\",\"orderListItem\":\"order-info_orderListItem__QRb5F\",\"itemImg\":\"order-info_itemImg__1LpIo\",\"itemName\":\"order-info_itemName__2piAK\",\"itemTotal\":\"order-info_itemTotal__20Fe2\",\"itemCount\":\"order-info_itemCount__1O1PJ\",\"itemPrice\":\"order-info_itemPrice__fk_ze\",\"orderFooter\":\"order-info_orderFooter__1EBeP\",\"orderTotal\":\"order-info_orderTotal__3qOgW\",\"orderTotalPrice\":\"order-info_orderTotalPrice__3sYvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"burger-ingredients_mainBlock__2As_I\",\"tabs\":\"burger-ingredients_tabs__G1sKB\",\"categoryBlock\":\"burger-ingredients_categoryBlock__2IFE5\",\"categoryBlockItem\":\"burger-ingredients_categoryBlockItem__3CqNe\",\"List\":\"burger-ingredients_List__h4KIP\",\"ListItem\":\"burger-ingredients_ListItem__2KbPW\",\"ListItemLink\":\"burger-ingredients_ListItemLink__Rmp7h\",\"ListImgWrap\":\"burger-ingredients_ListImgWrap__2Atay\",\"ListItemPriceWrap\":\"burger-ingredients_ListItemPriceWrap__2P7SP\",\"ListItemPrice\":\"burger-ingredients_ListItemPrice__1Ywji\",\"ListItemName\":\"burger-ingredients_ListItemName__2M1f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"burger-constructor_block__3SADW\",\"constructorList\":\"burger-constructor_constructorList__3jrm-\",\"constructorSubList\":\"burger-constructor_constructorSubList__2p6D6\",\"constructorListItem\":\"burger-constructor_constructorListItem__1UiOC\",\"constructorSubListItem\":\"burger-constructor_constructorSubListItem__3h8xg\",\"constructorTotal\":\"burger-constructor_constructorTotal__2vNkl\",\"constructorTotalPrice\":\"burger-constructor_constructorTotalPrice__3-aCt\",\"noBuns\":\"burger-constructor_noBuns__2oaoZ\",\"noBunsTop\":\"burger-constructor_noBunsTop__3YDQ6\",\"noBunsBottom\":\"burger-constructor_noBunsBottom__2EVy_\",\"noBunsMiddle\":\"burger-constructor_noBunsMiddle__1uAt9\"};","import React from \"react\";\r\nimport {\r\n  Logo,\r\n  BurgerIcon,\r\n  ListIcon,\r\n  ProfileIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"./app-header.module.css\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <header className={`${styles.header} mb-10 pb-4 pt-4`}>\r\n      <div className={styles.headerContainer}>\r\n        <nav className={styles.headerMenu}>\r\n          <NavLink\r\n            to=\"/\"\r\n            exact={true}\r\n            className={`${styles.headerLink} text text_type_main-default text_color_inactive`}\r\n            activeClassName={styles.active}\r\n          >\r\n            <BurgerIcon type=\"primary\" />\r\n            <span className=\"ml-4\">Конструктор</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/feed\"\r\n            className={`${styles.headerLink} text text_type_main-default text_color_inactive`}\r\n            activeClassName={styles.active}\r\n          >\r\n            <ListIcon type=\"primary\" />\r\n            <span className=\"ml-4\">Лента заказов</span>\r\n          </NavLink>\r\n        </nav>\r\n        <div className={styles.logoWrap}>\r\n          <Link to=\"/\">\r\n            <Logo />\r\n          </Link>\r\n        </div>\r\n        <NavLink\r\n          to=\"/profile\"\r\n          className={`${styles.headerLink} text text_type_main-default text_color_inactive`}\r\n          activeClassName={styles.active}\r\n          exact={true}\r\n        >\r\n          <ProfileIcon type=\"primary\" />\r\n          <span className=\"ml-4\">Личный кабинет</span>\r\n        </NavLink>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default AppHeader;\r\n","// hooks.ts\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook,\r\n} from \"react-redux\";\r\nimport { RootState, AppThunk, AppDispatch } from \"./index\";\r\n\r\n// Теперь этот хук «знает» структуру хранилища\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\n","export const NAME: \"constructorBurger\" = \"constructorBurger\";\r\nexport const ADD_BUN: \"ADD_BUN\" = \"ADD_BUN\";\r\nexport const ADD_INGREDIENT: \"ADD_INGREDIENT\" = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT: \"REMOVE_INGREDIENT\" = \"REMOVE_INGREDIENT\";\r\nexport const RESET_CONSTRUCTOR: \"RESET_CONSTRUCTOR\" = \"RESET_CONSTRUCTOR\";\r\nexport const UPDATE_CONSTRUCTOR: \"UPDATE_CONSTRUCTOR\" = \"UPDATE_CONSTRUCTOR\";\r\n","import { NAME } from \"./constants\";\r\nimport { RootState } from \"../../types\";\r\n\r\nexport const getConstructorItems = (store: RootState) => {\r\n  return store[NAME];\r\n};\r\n","import React, { FC, useMemo } from \"react\";\r\nimport {\r\n  Counter,\r\n  CurrencyIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"./burger-ingredients.module.css\";\r\n\r\nimport { useSelector } from \"../../types/hooks\";\r\nimport { getConstructorItems } from \"../../services/constructor/selectors\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { TProduct } from \"../../types/data\";\r\n\r\ntype TBurgerIngredient = {\r\n  product: TProduct;\r\n};\r\n\r\nconst BurgerIngredient: FC<TBurgerIngredient> = ({ product }) => {\r\n  const location = useLocation();\r\n  const orderState = useSelector(getConstructorItems);\r\n\r\n  const getCurrentCount = useMemo(() => {\r\n    return [orderState.bun, ...orderState.ingredients].reduce(\r\n      (acc, current) => {\r\n        if (current?._id === product?._id) {\r\n          return current.type === \"bun\" ? acc + 2 : acc + 1;\r\n        }\r\n        return acc;\r\n      },\r\n      0\r\n    );\r\n  }, [orderState, product._id]);\r\n\r\n  const [, dragRef] = useDrag({\r\n    type: \"ingredient\",\r\n    item: { ...product },\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n  return (\r\n    <li className={`${styles.ListItem} mb-8`} ref={dragRef}>\r\n      <Link\r\n        className={`${styles.ListItemLink}`}\r\n        to={{\r\n          pathname: `/ingredients/${product._id}`,\r\n          // This is the trick! This link sets\r\n          // the `background` in location state.\r\n          state: { background: location },\r\n        }}\r\n      >\r\n        {getCurrentCount !== 0 && (\r\n          <Counter count={getCurrentCount} size=\"default\" />\r\n        )}\r\n        <div className={`${styles.ListImgWrap} pl-4 pr-4`}>\r\n          <img src={product.image_large} alt={product.name} />\r\n        </div>\r\n        <div className={`${styles.ListItemPriceWrap} pl-4 pr-4 mt-1 mb-1`}>\r\n          <span\r\n            className={`${styles.ListItemPrice} text text_type_digits-default`}\r\n          >\r\n            {product.price}\r\n          </span>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n        <div className={`${styles.ListItemName} text text_type_main-default`}>\r\n          {product.name}\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","export const NAME: \"ingredients\" = \"ingredients\";\r\nexport const LOAD_ITEMS: \"LOAD_ITEMS\" = \"LOAD_ITEMS\";\r\nexport const LOAD_ITEMS_SUCCESS: \"LOAD_ITEMS_SUCCESS\" = \"LOAD_ITEMS_SUCCESS\";\r\nexport const LOAD_ITEMS_FAILED: \"LOAD_ITEMS_FAILED\" = \"LOAD_ITEMS_FAILED\";\r\n","import { NAME } from \"./constants\";\r\nimport { RootState } from \"../../types\";\r\n\r\nexport const getIngredients = (store: RootState) => store[NAME].ingredients;\r\nexport const ingredientsIsLoading = (store: RootState) =>\r\n  store[NAME].ingredientsRequest;\r\n","import React from \"react\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"./preloader.module.css\";\r\nconst Preloader = () => {\r\n  return (\r\n    <div className={`${styles.preloader} ${styles.pulse}`}>\r\n      <CurrencyIcon type=\"primary\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"./burger-ingredients.module.css\";\r\nimport BurgerIngredient from \"./burger-ingredient\";\r\nimport { useSelector } from \"../../types/hooks\";\r\nimport {\r\n  getIngredients,\r\n  ingredientsIsLoading,\r\n} from \"../../services/ingredients/selectors\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport { TProduct } from \"../../types/data\";\r\n\r\ntype TCategoryType = {\r\n  name: string;\r\n  ref: (node: Element | null | undefined) => void;\r\n};\r\ntype TCategoryTypeMap = {\r\n  [name: string]: TCategoryType;\r\n};\r\n\r\nconst BurgerIngredients = () => {\r\n  const loadingIngredients = useSelector(ingredientsIsLoading);\r\n  const productsData = useSelector(getIngredients);\r\n  const [currentTab, setCurrentTab] = useState(\"bun\");\r\n  const categoryType: Array<string> = Array.from(\r\n    new Set(productsData.map((product: TProduct) => product?.type))\r\n  );\r\n  const setTab = (tab: string) => {\r\n    setCurrentTab(tab);\r\n    const element = document.getElementById(tab);\r\n    if (element) element.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  const inViewOptions = {\r\n    threshold: 0,\r\n    trackVisibility: true,\r\n    delay: 100,\r\n  };\r\n  const [bunRef, inViewBun] = useInView(inViewOptions);\r\n  const [mainRef, inViewMain] = useInView(inViewOptions);\r\n  const [sauceRef, inViewSauce] = useInView(inViewOptions);\r\n\r\n  const categoryTypeMap: TCategoryTypeMap = {\r\n    bun: {\r\n      name: \"Булки\",\r\n      ref: bunRef,\r\n    },\r\n    sauce: {\r\n      name: \"Соусы\",\r\n      ref: sauceRef,\r\n    },\r\n    main: { name: \"Начинки\", ref: mainRef },\r\n  };\r\n  useEffect(() => {\r\n    if (inViewBun) {\r\n      setCurrentTab(\"bun\");\r\n    } else if (inViewSauce) {\r\n      setCurrentTab(\"sauce\");\r\n    } else if (inViewMain) {\r\n      setCurrentTab(\"main\");\r\n    }\r\n  }, [inViewBun, inViewMain, inViewSauce]);\r\n  if (loadingIngredients) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={`${styles.mainBlock} mr-10`}>\r\n      <h2 className={`text text_type_main-large mb-5`}>Соберите бургер</h2>\r\n      <div className={`${styles.tabs} mb-10`}>\r\n        {Object.entries(categoryTypeMap).map(([type, category]) => (\r\n          <Tab\r\n            value={type}\r\n            active={currentTab === type}\r\n            onClick={setTab}\r\n            key={type}\r\n          >\r\n            {category.name}\r\n          </Tab>\r\n        ))}\r\n      </div>\r\n      <ul className={`${styles.categoryBlock} custom-scroll`}>\r\n        {categoryType.length\r\n          ? categoryType.map((type) => (\r\n              <li\r\n                key={type}\r\n                className={`${styles.categoryBlockItem} mb-10`}\r\n                id={type}\r\n                ref={categoryTypeMap[type].ref}\r\n              >\r\n                <strong className={`mb-6 text text_type_main-medium`}>\r\n                  {categoryTypeMap[type].name}\r\n                </strong>\r\n                <ul className={`${styles.List} pl-4 pr-4`}>\r\n                  {productsData\r\n                    .filter((product: TProduct) => product.type === type)\r\n                    .map((product: TProduct) => (\r\n                      <BurgerIngredient product={product} key={product._id} />\r\n                    ))}\r\n                </ul>\r\n              </li>\r\n            ))\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import React, { FC } from \"react\";\nimport styles from \"./modal.module.css\";\n\ntype TModalOverlayTypes = {\n  clickHandler: () => void;\n};\nconst ModalOverlay: FC<TModalOverlayTypes> = ({ clickHandler }) => {\n  return <div className={styles.modalOverlay} onClick={clickHandler} />;\n};\nexport default ModalOverlay;\n","import React, { FC, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ModalOverlay from \"./modal-overlay\";\r\nimport styles from \"./modal.module.css\";\r\n\r\ntype TModalTypes = {\r\n  headerTitle?: string;\r\n  visible: boolean;\r\n  setFunc: (bool: boolean) => void;\r\n  withHeader?: boolean;\r\n};\r\nconst modalRoot = document.getElementById(\"react-modals\");\r\nconst Modal: FC<TModalTypes> = ({\r\n  children,\r\n  headerTitle,\r\n  visible,\r\n  setFunc,\r\n  withHeader = true,\r\n}) => {\r\n  const handleEscClose = (evt: KeyboardEvent) => {\r\n    if (evt.key === \"Escape\") {\r\n      setFunc(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.addEventListener(\"keyup\", handleEscClose);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", handleEscClose);\r\n    };\r\n  });\r\n  if (!modalRoot) return null;\r\n  return ReactDOM.createPortal(\r\n    visible ? (\r\n      <div className={`${styles.modal} ${visible ? styles.show : \"\"}`}>\r\n        <ModalOverlay\r\n          clickHandler={() => {\r\n            setFunc(false);\r\n          }}\r\n        />\r\n        <div\r\n          className={`${styles.modalBody} pl-10 pr-10 pt-10 pb-10`}\r\n          onClick={(evt) => evt.stopPropagation()}\r\n        >\r\n          <button\r\n            title=\"Закрыть\"\r\n            className={`${styles.modalCloseBtn} reset-btn`}\r\n            onClick={() => {\r\n              setFunc(false);\r\n            }}\r\n          >\r\n            <CloseIcon type=\"primary\" />\r\n          </button>\r\n          {withHeader ? (\r\n            <div className={styles.modalHeader}>\r\n              {headerTitle && (\r\n                <strong className={\"text text_type_main-large\"}>\r\n                  {headerTitle}\r\n                </strong>\r\n              )}\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className={styles.modalContent}>{children}</div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <></>\r\n    ),\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/done.e036971b.png\";","export const NAME: \"order\" = \"order\";\r\nexport const CREATE_ORDER_REQUEST: \"CREATE_ORDER_REQUEST\" =\r\n  \"CREATE_ORDER_REQUEST\";\r\nexport const CREATE_ORDER_SUCCESS: \"CREATE_ORDER_SUCCESS\" =\r\n  \"CREATE_ORDER_SUCCESS\";\r\nexport const CREATE_ORDER_FAILED: \"CREATE_ORDER_FAILED\" = \"CREATE_ORDER_FAILED\";\r\n","import { NAME } from \"./constants\";\r\nimport { RootState } from \"../../types\";\r\n\r\nexport const getFullOrder = (store: RootState) => store[NAME].orderInfo;\r\nexport const getOrder = (store: RootState) => store[NAME].orderInfo?.order;\r\nexport const isOrderRequest = (store: RootState) => store[NAME].orderRequest;\r\n","import React from \"react\";\r\nimport styles from \"./order.module.css\";\r\nimport done from \"../../images/done.png\";\r\nimport { useSelector } from \"../../types/hooks\";\r\nimport { getOrder } from \"../../services/order/selectors\";\r\n\r\nconst OrderDetails = () => {\r\n  const order = useSelector(getOrder);\r\n\r\n  return (\r\n    <div className={styles.order}>\r\n      <strong className={`${styles.order} text text_type_digits-large mb-8`}>\r\n        {order?.number}\r\n      </strong>\r\n      <p className=\"text text_type_main-medium mb-15\">идентификатор заказа</p>\r\n      <img className=\"mb-15\" src={done} alt=\"done\" />\r\n      <p className=\"text text_type_main-default mb-2\">\r\n        Ваш заказ начали готовить\r\n      </p>\r\n      <p className=\"text text_type_main-default text_color_inactive mb-15\">\r\n        Дождитесь готовности на орбитальной станции\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","import React, { CSSProperties, FC } from \"react\";\n\nimport styles from \"./burger-constructor.module.css\";\n\ntype TEmptyConstructorElement = {\n  name: string;\n  position: string;\n  style?: CSSProperties;\n};\nconst EmptyConstructorElement: FC<TEmptyConstructorElement> = ({\n  name,\n  position,\n  style,\n}) => {\n  return (\n    <div className={`${styles.constructorListItem} pr-8 pl-6`}>\n      <div\n        style={style}\n        className={`${styles.noBuns} ${styles[position]} text text_type_main-default`}\n      >\n        {name}\n      </div>\n    </div>\n  );\n};\n\nexport default EmptyConstructorElement;\n","import {\r\n  ADD_BUN,\r\n  ADD_INGREDIENT,\r\n  REMOVE_INGREDIENT,\r\n  RESET_CONSTRUCTOR,\r\n  UPDATE_CONSTRUCTOR,\r\n} from \"./constants\";\r\nimport { TProduct } from \"../../types/data\";\r\n\r\nexport interface IAddBun {\r\n  readonly type: typeof ADD_BUN;\r\n  bun: TProduct;\r\n}\r\nexport interface IAddIngredient {\r\n  readonly type: typeof ADD_INGREDIENT;\r\n  ingredient: TProduct;\r\n}\r\nexport interface IRemoveIngredient {\r\n  readonly type: typeof REMOVE_INGREDIENT;\r\n  ingredient: TProduct;\r\n}\r\nexport interface IResetConstructor {\r\n  readonly type: typeof RESET_CONSTRUCTOR;\r\n}\r\nexport interface IUpdateConstructor {\r\n  readonly type: typeof UPDATE_CONSTRUCTOR;\r\n  value: { dragIndex: number; hoverIndex: number };\r\n}\r\n\r\nexport type TConstructor =\r\n  | IAddBun\r\n  | IAddIngredient\r\n  | IRemoveIngredient\r\n  | IResetConstructor\r\n  | IUpdateConstructor;\r\n\r\nexport const addBunAction = (bun: TProduct): IAddBun => ({\r\n  type: ADD_BUN,\r\n  bun,\r\n});\r\nexport const addIngredientAction = (ingredient: TProduct): IAddIngredient => ({\r\n  type: ADD_INGREDIENT,\r\n  ingredient,\r\n});\r\nexport const removeIngredientAction = (\r\n  ingredient: TProduct\r\n): IRemoveIngredient => ({\r\n  type: REMOVE_INGREDIENT,\r\n  ingredient,\r\n});\r\nexport const resetConstructorAction = (): IResetConstructor => ({\r\n  type: RESET_CONSTRUCTOR,\r\n});\r\nexport const updateIngredientAction = (value: {\r\n  dragIndex: number;\r\n  hoverIndex: number;\r\n}): IUpdateConstructor => ({\r\n  type: UPDATE_CONSTRUCTOR,\r\n  value,\r\n});\r\n","import React, { FC, useRef } from \"react\";\r\nimport {\r\n  ConstructorElement,\r\n  DragIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDispatch } from \"../../types/hooks\";\r\nimport { useDrop, useDrag, DropTargetMonitor } from \"react-dnd\";\r\nimport styles from \"./burger-constructor.module.css\";\r\nimport { TProduct } from \"../../types/data\";\r\nimport { XYCoord } from \"dnd-core\";\r\nimport {\r\n  removeIngredientAction,\r\n  updateIngredientAction,\r\n} from \"../../services/constructor/action-type\";\r\ntype TConstructorElement = {\r\n  product: TProduct;\r\n  index: number;\r\n  ingredientsLength: number;\r\n};\r\ninterface DragItem {\r\n  index: number;\r\n  id: string;\r\n  type: string;\r\n}\r\n\r\nconst ConstructorSubElement: FC<TConstructorElement> = ({\r\n  product,\r\n  index,\r\n  ingredientsLength,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const id = product._id;\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: \"constrElem\",\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      };\r\n    },\r\n    hover(item: DragItem, monitor: DropTargetMonitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get vertical middle\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Time to actually perform the action\r\n      // moveCard(dragIndex, hoverIndex);\r\n      dispatch(updateIngredientAction({ dragIndex, hoverIndex }));\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: \"constrElem\",\r\n    item: () => {\r\n      return { id, index };\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(drop(ref));\r\n  const style = {\r\n    cursor: \"move\",\r\n  };\r\n  return (\r\n    <div\r\n      className={`${styles.constructorSubListItem} ${\r\n        ingredientsLength < 6 ? \"pr-4\" : \"pr-2\"\r\n      }`}\r\n      ref={ref}\r\n      style={{ ...style, opacity }}\r\n      data-handler-id={handlerId}\r\n    >\r\n      <DragIcon type=\"primary\" />\r\n      <ConstructorElement\r\n        text={product.name}\r\n        price={product.price}\r\n        thumbnail={product.image}\r\n        handleClose={() => {\r\n          dispatch(removeIngredientAction(product));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConstructorSubElement;\r\n","export const SERVER_URL = \"https://norma.nomoreparties.space/api\";\r\nexport const WS_URL = \"wss://norma.nomoreparties.space/orders\";\r\n","export function getCookie(name: string) {\n  const matches = document.cookie.match(\n    /*eslint-disable */\n    new RegExp(\n      \"(?:^|; )\" +\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") +\n        \"=([^;]*)\"\n    )\n    /*eslint-enable */\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport function setCookie(name: string, value: string | null, props?: any) {\n  props = {\n    path: \"/\", //задаем корневой адрес для cookies\n    ...props,\n  };\n  let exp = props.expires;\n  if (typeof exp == \"number\" && exp) {\n    const d = new Date();\n    d.setTime(d.getTime() + exp * 1000);\n    exp = props.expires = d;\n  }\n  if (exp && exp.toUTCString) {\n    props.expires = exp.toUTCString();\n  }\n  value = encodeURIComponent(value || \"\");\n  let updatedCookie = name + \"=\" + value;\n  for (const propName in props) {\n    updatedCookie += \"; \" + propName;\n    const propValue = props[propName];\n    if (propValue !== true) {\n      updatedCookie += \"=\" + propValue;\n    }\n  }\n  document.cookie = updatedCookie;\n}\n\nexport function deleteCookie(name: string) {\n  setCookie(name, null, { expires: -1 });\n}\n","import { SERVER_URL } from \"../../utils/constants\";\r\nimport { resetConstructorAction } from \"../constructor/action-type\";\r\nimport {\r\n  createOrderRequestAction,\r\n  createOrderSuccessAction,\r\n  createOrderFailedAction,\r\n} from \"./action-type\";\r\nimport { AppDispatch } from \"../../types\";\r\nimport { getCookie } from \"../../utils/cookie\";\r\n\r\nexport const createOrder = (\r\n  data: {\r\n    ingredients: (string | undefined)[];\r\n  },\r\n  setStartedOrder: (status: boolean) => void\r\n) => {\r\n  return async function (dispatch: AppDispatch) {\r\n    try {\r\n      dispatch(createOrderRequestAction());\r\n      const res = await fetch(`${SERVER_URL}/orders`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${getCookie(\"accessToken\")}`,\r\n        },\r\n\r\n        body: JSON.stringify(data),\r\n      });\r\n      const isJson =\r\n        // @ts-ignore\r\n        res.headers.get(\"content-type\").indexOf(\"application/json\") !== -1;\r\n      if (!res.ok) {\r\n        throw new Error(\"Ответ сети не ok\");\r\n      }\r\n      if (!isJson) {\r\n        throw new Error(\"Ответ сети не json\");\r\n      }\r\n      const json = await res.json();\r\n      if (json.success) {\r\n        dispatch(createOrderSuccessAction(json));\r\n        dispatch(resetConstructorAction());\r\n        setStartedOrder(true);\r\n      }\r\n    } catch (error: any) {\r\n      console.log(error.message);\r\n      dispatch(createOrderFailedAction());\r\n    }\r\n  };\r\n};\r\n","export const NAME: \"auth\" = \"auth\";\r\n\r\nexport const SET_USER_DATA: `SET_DATA` = `SET_DATA`;\r\nexport const SET_AUTH_CHECKING: `SET_AUTH_CHECKING` = `SET_AUTH_CHECKING`;\r\n\r\nexport const SET_REGISTER_SENDING: `SET_REGISTER_SENDING` = `SET_REGISTER_SENDING`;\r\nexport const SET_REGISTER_SEND_ERROR: `SET_REGISTER_SEND_ERROR` = `SET_REGISTER_SEND_ERROR`;\r\n\r\nexport const SET_LOGIN_SENDING: `SET_LOGIN_SENDING` = `SET_LOGIN_SENDING`;\r\nexport const SET_LOGIN_SEND_ERROR: `SET_LOGIN_SEND_ERROR` = `SET_LOGIN_SEND_ERROR`;\r\n\r\nexport const SET_PASSWORD_FORGOT_EMAIL_SEND: `SET_PASSWORD_FORGOT_EMAIL_SEND` = `SET_PASSWORD_FORGOT_EMAIL_SEND`;\r\nexport const SET_PASSWORD_FORGOT_CHANGED: `SET_PASSWORD_FORGOT_CHANGED` = `SET_PASSWORD_FORGOT_CHANGED`;\r\nexport const SET_RESET_PASSWORD_FORGOT_ERROR: `SET_RESET_PASSWORD_FORGOT_ERROR` = `SET_RESET_PASSWORD_FORGOT_ERROR`;\r\nexport const RESET_PASSWORD_FORGOT: `RESET_PASSWORD_FORGOT` = `RESET_PASSWORD_FORGOT`;\r\n","import { NAME } from \"./constants\";\r\nimport { RootState } from \"../../types\";\r\n\r\nexport const getUser = (store: RootState) => store[NAME].data;\r\nexport const getIsAuth = (store: RootState) => !!store[NAME].data;\r\n\r\nexport const getIsAuthChecking = (store: RootState) => store[NAME].authChecking;\r\n\r\nexport const getRegisterSending = (store: RootState) =>\r\n  store[NAME].registerSending;\r\nexport const getRegisterError = (store: RootState) => store[NAME].registerError;\r\n\r\nexport const getLoginSending = (store: RootState) => store[NAME].loginSending;\r\nexport const getLoginError = (store: RootState) => store[NAME].loginError;\r\n\r\nexport const getForgotPassword = (store: RootState) =>\r\n  store[NAME].forgotPassword;\r\n","import React, { useMemo, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  ConstructorElement,\r\n  CurrencyIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport styles from \"./burger-constructor.module.css\";\r\n\r\nimport EmptyConstructorElement from \"./empty-contstructor-element\";\r\nimport ConstructorSubElement from \"./contstructor-element\";\r\nimport { useDispatch, useSelector } from \"../../types/hooks\";\r\nimport { getConstructorItems } from \"../../services/constructor/selectors\";\r\nimport { createOrder } from \"../../services/order/actions\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { getUser } from \"../../services/auth/selectors\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport { TProduct } from \"../../types/data\";\r\nimport {\r\n  addBunAction,\r\n  addIngredientAction,\r\n} from \"../../services/constructor/action-type\";\r\nimport { isOrderRequest } from \"../../services/order/selectors\";\r\n\r\nconst BurgerConstructor = () => {\r\n  const location = useLocation();\r\n  const user = useSelector(getUser);\r\n  const dispatch = useDispatch();\r\n  const orderState = useSelector(getConstructorItems);\r\n  const isOrderLoading = useSelector(isOrderRequest);\r\n  const { bun, ingredients } = orderState;\r\n  const [startedOrder, setStartedOrder] = useState(false);\r\n  const startOrderHandle = () => {\r\n    if (!user) {\r\n      setStartedOrder(true);\r\n      return;\r\n    }\r\n    const ingredientsId = [\r\n      ...orderState.ingredients.map((product: TProduct) => product._id),\r\n    ];\r\n    const bunId = orderState.bun?._id;\r\n    const orderData = {\r\n      ingredients: [...ingredientsId, bunId],\r\n    };\r\n    dispatch(createOrder(orderData, setStartedOrder));\r\n  };\r\n  const totalOrderSum = useMemo(() => {\r\n    if (!orderState.bun && !orderState.ingredients.length) return 0;\r\n    return [orderState.bun, ...orderState.ingredients].reduce(\r\n      (prev, current) => {\r\n        if (current && current.type) {\r\n          return (\r\n            prev + (current.type === \"bun\" ? current.price * 2 : current.price)\r\n          );\r\n        }\r\n        return prev + 0;\r\n      },\r\n      0\r\n    );\r\n  }, [orderState]);\r\n\r\n  const [{ canDrop, dragItem }, dropTarget] = useDrop({\r\n    accept: \"ingredient\",\r\n    drop(item: TProduct) {\r\n      dispatch(\r\n        item.type === \"bun\" ? addBunAction(item) : addIngredientAction(item)\r\n      );\r\n    },\r\n    collect: (monitor) => {\r\n      return {\r\n        canDrop: monitor.canDrop(),\r\n        dragItem: monitor.getItem(),\r\n        isHover: monitor.isOver(),\r\n      };\r\n    },\r\n  });\r\n  const dragBuns = canDrop && dragItem && dragItem.type === \"bun\";\r\n  const dragIngredients = canDrop && dragItem && dragItem.type !== \"bun\";\r\n  const outline = \"1px solid #fff\";\r\n\r\n  if (startedOrder && !user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/login\",\r\n          state: { from: location },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div className={`${styles.block} pt-25 pb-15 pl-4`}>\r\n      <div className={`${styles.constructorList} mb-10`} ref={dropTarget}>\r\n        {!bun ? (\r\n          <EmptyConstructorElement\r\n            name=\"Выберите булки\"\r\n            position=\"noBunsTop\"\r\n            style={dragBuns ? { outline } : {}}\r\n          />\r\n        ) : (\r\n          <div className={`${styles.constructorListItem} pr-4 pl-6`}>\r\n            <ConstructorElement\r\n              type=\"top\"\r\n              isLocked={true}\r\n              text={`${bun.name} (верх)`}\r\n              price={bun.price}\r\n              thumbnail={bun.image}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className={`${styles.constructorSubList} custom-scroll`}>\r\n          {ingredients.length ? (\r\n            ingredients.map((product: TProduct, index: number) => {\r\n              return (\r\n                <ConstructorSubElement\r\n                  product={product}\r\n                  key={product.uuid}\r\n                  index={index}\r\n                  ingredientsLength={ingredients.length}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <EmptyConstructorElement\r\n              name=\"Выберите начинку\"\r\n              position=\"noBunsMiddle\"\r\n              style={dragIngredients ? { outline } : {}}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {!bun ? (\r\n          <EmptyConstructorElement\r\n            name=\"Выберите булки\"\r\n            position=\"noBunsButtom\"\r\n            style={dragBuns ? { outline } : {}}\r\n          />\r\n        ) : (\r\n          <div className={`${styles.constructorListItem} pr-4 pl-6`}>\r\n            <ConstructorElement\r\n              type=\"bottom\"\r\n              isLocked={true}\r\n              text={`${bun.name} (низ)`}\r\n              price={bun.price}\r\n              thumbnail={bun.image}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={`${styles.constructorTotal} mr-4`}>\r\n        {totalOrderSum ? (\r\n          <div className={`${styles.constructorTotalPrice} mr-10`}>\r\n            <p className=\"text text_type_digits-medium\">{totalOrderSum}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        ) : null}\r\n\r\n        {totalOrderSum && bun ? (\r\n          <Button type=\"primary\" size=\"large\" onClick={startOrderHandle}>\r\n            {isOrderLoading ? \"Оформление...\" : \"Оформить заказ\"}\r\n          </Button>\r\n        ) : null}\r\n\r\n        {startedOrder && (\r\n          <Modal visible={startedOrder} setFunc={setStartedOrder}>\r\n            <OrderDetails />\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAILED,\r\n} from \"./constants\";\r\nimport { TOrderCreated } from \"../../types/data\";\r\n\r\nexport interface ICreateOrderRequest {\r\n  readonly type: typeof CREATE_ORDER_REQUEST;\r\n}\r\nexport interface ICreateOrderSuccess {\r\n  readonly type: typeof CREATE_ORDER_SUCCESS;\r\n  order: TOrderCreated;\r\n}\r\nexport interface ICreateOrderFailed {\r\n  readonly type: typeof CREATE_ORDER_FAILED;\r\n}\r\n\r\nexport type TOrder =\r\n  | ICreateOrderRequest\r\n  | ICreateOrderSuccess\r\n  | ICreateOrderFailed;\r\n\r\nexport const createOrderRequestAction = (): ICreateOrderRequest => ({\r\n  type: CREATE_ORDER_REQUEST,\r\n});\r\nexport const createOrderSuccessAction = (\r\n  order: TOrderCreated\r\n): ICreateOrderSuccess => ({\r\n  type: CREATE_ORDER_SUCCESS,\r\n  order,\r\n});\r\nexport const createOrderFailedAction = (): ICreateOrderFailed => ({\r\n  type: CREATE_ORDER_FAILED,\r\n});\r\n","import { LOAD_ITEMS, LOAD_ITEMS_SUCCESS, LOAD_ITEMS_FAILED } from \"./constants\";\r\nimport { TProduct } from \"../../types/data\";\r\n\r\nexport interface IIngredientFailed {\r\n  readonly type: typeof LOAD_ITEMS_FAILED;\r\n}\r\n\r\nexport interface IIngredientRequest {\r\n  readonly type: typeof LOAD_ITEMS;\r\n}\r\n\r\nexport interface IIngredientSuccess {\r\n  readonly type: typeof LOAD_ITEMS_SUCCESS;\r\n  readonly data: TProduct[];\r\n}\r\n\r\nexport type TIngredient =\r\n  | IIngredientFailed\r\n  | IIngredientRequest\r\n  | IIngredientSuccess;\r\n\r\nexport const IngredientsSuccessAction = (\r\n  data: TProduct[]\r\n): IIngredientSuccess => ({\r\n  type: LOAD_ITEMS_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const IngredientsRequestAction = (): IIngredientRequest => ({\r\n  type: LOAD_ITEMS,\r\n});\r\n\r\nexport const IngredientsFailedAction = (): IIngredientFailed => ({\r\n  type: LOAD_ITEMS_FAILED,\r\n});\r\n","import { SERVER_URL } from \"./constants\";\r\nimport { setCookie } from \"./cookie\";\r\n\r\nconst checkResponse = (res: Response): Promise<any> => {\r\n  return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\r\n};\r\n\r\nexport const refreshToken = () => {\r\n  return fetch(`${SERVER_URL}/auth/token`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json;charset=utf-8\",\r\n    },\r\n    body: JSON.stringify({\r\n      token: localStorage.getItem(\"refreshToken\"),\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\ntype Overwrite<T, U> = Pick<T, Exclude<keyof T, keyof U>> & U;\r\ntype MyRequestInit = Overwrite<\r\n  RequestInit,\r\n  { headers: Record<string, string> }\r\n>;\r\n\r\nexport const fetchWithRefresh = async (url: string, options: MyRequestInit) => {\r\n  try {\r\n    const res = await fetch(url, options);\r\n    return await checkResponse(res);\r\n  } catch (err: any) {\r\n    if (err.message === \"jwt expired\") {\r\n      const refreshData = await refreshToken(); //обновляем токен\r\n      localStorage.setItem(\"refreshToken\", refreshData.refreshToken);\r\n      setCookie(\"accessToken\", refreshData.accessToken.split(\"Bearer \")[1]);\r\n      if (options.headers) {\r\n        options.headers[\"authorization\"] = refreshData.accessToken;\r\n      }\r\n      const res = await fetch(url, options); //повторяем запрос\r\n      return await checkResponse(res);\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n};\r\n","import { TUser } from \"../../types/data\";\r\nimport {\r\n  SET_USER_DATA,\r\n  SET_AUTH_CHECKING,\r\n  SET_REGISTER_SENDING,\r\n  SET_REGISTER_SEND_ERROR,\r\n  SET_LOGIN_SENDING,\r\n  SET_LOGIN_SEND_ERROR,\r\n  SET_PASSWORD_FORGOT_EMAIL_SEND,\r\n  SET_PASSWORD_FORGOT_CHANGED,\r\n  SET_RESET_PASSWORD_FORGOT_ERROR,\r\n  RESET_PASSWORD_FORGOT,\r\n} from \"./constants\";\r\n\r\nexport interface IUserData {\r\n  readonly type: typeof SET_USER_DATA;\r\n  data: TUser | null;\r\n}\r\nexport interface IAuthChecking {\r\n  readonly type: typeof SET_AUTH_CHECKING;\r\n  authChecking: boolean;\r\n}\r\nexport interface IRegisterSending {\r\n  readonly type: typeof SET_REGISTER_SENDING;\r\n  registerSending: boolean;\r\n}\r\nexport interface IRegisterSendError {\r\n  readonly type: typeof SET_REGISTER_SEND_ERROR;\r\n  registerError: string;\r\n}\r\nexport interface ILoginSending {\r\n  readonly type: typeof SET_LOGIN_SENDING;\r\n  loginSending: boolean;\r\n}\r\nexport interface ILoginSendError {\r\n  readonly type: typeof SET_LOGIN_SEND_ERROR;\r\n  loginError: string;\r\n}\r\nexport interface IPasswordForgotEmailSend {\r\n  readonly type: typeof SET_PASSWORD_FORGOT_EMAIL_SEND;\r\n  payload: {\r\n    emailSend: boolean;\r\n    message: string;\r\n  };\r\n}\r\nexport interface IPasswordForgotChanged {\r\n  readonly type: typeof SET_PASSWORD_FORGOT_CHANGED;\r\n  payload: {\r\n    passwordChanged: boolean;\r\n    message: string;\r\n  };\r\n}\r\nexport interface IPasswordResetError {\r\n  readonly type: typeof SET_RESET_PASSWORD_FORGOT_ERROR;\r\n  payload: {\r\n    errorMessage: string;\r\n  };\r\n}\r\nexport interface IPasswordReset {\r\n  readonly type: typeof RESET_PASSWORD_FORGOT;\r\n}\r\n\r\nexport type TAuth =\r\n  | IUserData\r\n  | IAuthChecking\r\n  | IRegisterSending\r\n  | IRegisterSendError\r\n  | ILoginSending\r\n  | ILoginSendError\r\n  | IPasswordForgotEmailSend\r\n  | IPasswordForgotChanged\r\n  | IPasswordResetError\r\n  | IPasswordReset;\r\n\r\nexport const setUserData = (data: TUser | null): IUserData => ({\r\n  type: SET_USER_DATA,\r\n  data,\r\n});\r\nexport const setAuthChecking = (authChecking: boolean): IAuthChecking => ({\r\n  type: SET_AUTH_CHECKING,\r\n  authChecking,\r\n});\r\nexport const setRegisterSending = (\r\n  registerSending: boolean\r\n): IRegisterSending => ({\r\n  type: SET_REGISTER_SENDING,\r\n  registerSending,\r\n});\r\nexport const setRegisterSendError = (\r\n  registerError: string\r\n): IRegisterSendError => ({\r\n  type: SET_REGISTER_SEND_ERROR,\r\n  registerError,\r\n});\r\nexport const setLoginSending = (loginSending: boolean): ILoginSending => ({\r\n  type: SET_LOGIN_SENDING,\r\n  loginSending,\r\n});\r\nexport const setLoginSendError = (loginError: string): ILoginSendError => ({\r\n  type: SET_LOGIN_SEND_ERROR,\r\n  loginError,\r\n});\r\nexport const setPasswordForgotEmailSend = ({\r\n  emailSend,\r\n  message,\r\n}: {\r\n  emailSend: boolean;\r\n  message: string;\r\n}): IPasswordForgotEmailSend => ({\r\n  type: SET_PASSWORD_FORGOT_EMAIL_SEND,\r\n  payload: {\r\n    emailSend,\r\n    message,\r\n  },\r\n});\r\nexport const setPasswordForgotChanged = ({\r\n  passwordChanged,\r\n  message,\r\n}: {\r\n  passwordChanged: boolean;\r\n  message: string;\r\n}): IPasswordForgotChanged => ({\r\n  type: SET_PASSWORD_FORGOT_CHANGED,\r\n  payload: {\r\n    passwordChanged,\r\n    message,\r\n  },\r\n});\r\nexport const setPasswordResetError = ({\r\n  errorMessage,\r\n}: {\r\n  errorMessage: string;\r\n}): IPasswordResetError => ({\r\n  type: SET_RESET_PASSWORD_FORGOT_ERROR,\r\n  payload: {\r\n    errorMessage,\r\n  },\r\n});\r\nexport const setPasswordReset = (): IPasswordReset => ({\r\n  type: RESET_PASSWORD_FORGOT,\r\n});\r\n","import { SERVER_URL } from \"../../utils/constants\";\r\nimport { deleteCookie, getCookie, setCookie } from \"../../utils/cookie\";\r\nimport { fetchWithRefresh } from \"../../utils/auth-api\";\r\nimport {\r\n  setAuthChecking,\r\n  setLoginSendError,\r\n  setLoginSending,\r\n  setPasswordForgotChanged,\r\n  setPasswordForgotEmailSend,\r\n  setPasswordResetError,\r\n  setRegisterSendError,\r\n  setRegisterSending,\r\n  setUserData,\r\n} from \"./action-type\";\r\nimport { AppDispatch } from \"../../types\";\r\nimport { TUser } from \"../../types/data\";\r\n\r\nexport function register({ name, password, email }: TUser) {\r\n  return async function (dispatch: AppDispatch) {\r\n    dispatch(setRegisterSending(true));\r\n    // Запрашиваем данные у сервера\r\n    try {\r\n      const res = await fetch(`${SERVER_URL}/auth/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n      const isJson =\r\n        // @ts-ignore\r\n        res.headers.get(\"content-type\").indexOf(\"application/json\") !== -1;\r\n      if (!isJson) {\r\n        throw new Error(\"Ответ сети не json\");\r\n      }\r\n      if (!res.ok) {\r\n        const { message } = await res.json();\r\n        throw new Error(`Ответ сети не ok. Ошибка: ${message}`);\r\n      }\r\n      const { user, accessToken, refreshToken } = await res.json();\r\n      setCookie(\"accessToken\", accessToken.split(\"Bearer \")[1]);\r\n      localStorage.setItem(\"refreshToken\", refreshToken);\r\n\r\n      dispatch(setUserData(user));\r\n      dispatch(setRegisterSendError(\"\"));\r\n    } catch (error: any) {\r\n      dispatch(setRegisterSendError(error.toString() || \"\"));\r\n    }\r\n  };\r\n}\r\nexport function login({\r\n  email,\r\n  password,\r\n}: {\r\n  email: string;\r\n  password: string;\r\n}) {\r\n  return async function (dispatch: AppDispatch) {\r\n    dispatch(setLoginSending(true));\r\n    // Запрашиваем данные у сервера\r\n    try {\r\n      const res = await fetch(`${SERVER_URL}/auth/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const isJson =\r\n        // @ts-ignore\r\n        res.headers.get(\"content-type\").indexOf(\"application/json\") !== -1;\r\n      if (!isJson) {\r\n        throw new Error(\"Ответ сети не json\");\r\n      }\r\n      if (!res.ok) {\r\n        const { message } = await res.json();\r\n        throw new Error(message);\r\n      }\r\n      const { user, accessToken, refreshToken } = await res.json();\r\n      setCookie(\"accessToken\", accessToken.split(\"Bearer \")[1]);\r\n      localStorage.setItem(\"refreshToken\", refreshToken);\r\n\r\n      dispatch(setUserData(user));\r\n      dispatch(setLoginSendError(\"\"));\r\n    } catch (error: any) {\r\n      dispatch(setLoginSendError(error.toString() || \"\"));\r\n    }\r\n  };\r\n}\r\nexport function signOut() {\r\n  return async function (dispatch: AppDispatch) {\r\n    // Запрашиваем данные у сервера\r\n    try {\r\n      const res = await fetch(`${SERVER_URL}/auth/logout`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ token: localStorage.getItem(\"refreshToken\") }),\r\n      });\r\n      const isJson =\r\n        // @ts-ignore\r\n        res.headers.get(\"content-type\").indexOf(\"application/json\") !== -1;\r\n      if (!isJson) {\r\n        throw new Error(\"Ответ сети не json\");\r\n      }\r\n      if (!res.ok) {\r\n        const { message } = await res.json();\r\n        throw new Error(`Ответ сети не ok. Ошибка: ${message}`);\r\n      }\r\n      // const response = await res.json();\r\n      dispatch(setUserData(null));\r\n      localStorage.removeItem(\"refreshToken\");\r\n      deleteCookie(\"accessToken\");\r\n    } catch (error: any) {\r\n      console.error(error);\r\n    }\r\n  };\r\n}\r\nexport function checkAuth() {\r\n  return async function (dispatch: AppDispatch) {\r\n    dispatch(setAuthChecking(true));\r\n    const token = localStorage.getItem(\"refreshToken\");\r\n    if (token) {\r\n      return fetchWithRefresh(`${SERVER_URL}/auth/user`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${getCookie(\"accessToken\")}`,\r\n        },\r\n      }).then(res => {\r\n        const { user } = res;\r\n        dispatch(setUserData(user));\r\n        dispatch(setAuthChecking(false));\r\n      });\r\n    } else {\r\n      dispatch(setAuthChecking(false));\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\nexport function forgotPassword({\r\n  email,\r\n  password,\r\n  token,\r\n}: {\r\n  email: string;\r\n  password: string;\r\n  token: string;\r\n}) {\r\n  return async function (dispatch: AppDispatch) {\r\n    const isPasswordChange = password && token;\r\n    const REQUEST_URL = isPasswordChange\r\n      ? `${SERVER_URL}/password-reset/reset`\r\n      : `${SERVER_URL}/password-reset`;\r\n    // Запрашиваем данные у сервера\r\n    try {\r\n      const res = await fetch(REQUEST_URL, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password, token }),\r\n      });\r\n      const isJson =\r\n        // @ts-ignore\r\n        res.headers.get(\"content-type\").indexOf(\"application/json\") !== -1;\r\n      if (!isJson) {\r\n        throw new Error(\"Ответ сети не json\");\r\n      }\r\n      if (!res.ok) {\r\n        const { message } = await res.json();\r\n        throw new Error(`Ответ сети не ok. Ошибка: ${message}`);\r\n      }\r\n      const { success, message } = await res.json();\r\n      if (isPasswordChange) {\r\n        dispatch(\r\n          setPasswordForgotChanged({ passwordChanged: success, message })\r\n        );\r\n      } else {\r\n        dispatch(setPasswordForgotEmailSend({ emailSend: success, message }));\r\n      }\r\n    } catch (error: any) {\r\n      console.error(error);\r\n      dispatch(setPasswordResetError({ errorMessage: error.toString() }));\r\n    }\r\n  };\r\n}\r\n","import React, { useState, SyntheticEvent, ChangeEvent } from \"react\";\r\nimport styles from \"./page.module.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  PasswordInput,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../types/hooks\";\r\nimport { login } from \"../services/auth/actions\";\r\nimport { getLoginError } from \"../services/auth/selectors\";\r\n\r\nconst LoginPage = () => {\r\n  const loginError = useSelector(getLoginError);\r\n  const dispatch = useDispatch();\r\n  const [form, setValue] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const handleSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(login(form));\r\n  };\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h1 className={`${styles.formTitle} text text_type_main-medium mb-6 `}>\r\n          Вход\r\n        </h1>\r\n        <div className={`${styles.formField} ${styles.formEmail} mb-6`}>\r\n          <Input\r\n            type={\"email\"}\r\n            placeholder={\"E-mail\"}\r\n            onChange={onChange}\r\n            value={form.email}\r\n            name={\"email\"}\r\n            error={false}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        <div className={`${styles.formField} mb-6`}>\r\n          <PasswordInput\r\n            onChange={onChange}\r\n            value={form.password}\r\n            name={\"password\"}\r\n          />\r\n        </div>\r\n        {loginError && (\r\n          <p\r\n            className={`${styles.formErrorMsg} pt-2 pb-5 text text_type_main-small`}\r\n          >\r\n            {loginError}\r\n          </p>\r\n        )}\r\n        <div className={`${styles.formButton} mb-20`}>\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Войти\r\n          </Button>\r\n        </div>\r\n        <p\r\n          className={`${styles.formLinkItem} text text_type_main-default text_color_inactive mb-4`}\r\n        >\r\n          Вы — новый пользователь?\r\n          <Link className={styles.formLink} to={\"/register\"}>\r\n            Зарегистрироваться\r\n          </Link>\r\n        </p>\r\n        <p\r\n          className={`${styles.formLinkItem} text text_type_main-default text_color_inactive`}\r\n        >\r\n          Забыли пароль?\r\n          <Link className={styles.formLink} to={\"/forgot-password\"}>\r\n            Восстановить пароль\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport styles from \"./page.module.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  PasswordInput,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"../types/hooks\";\r\nimport { register } from \"../services/auth/actions\";\r\nimport { useSelector } from \"../types/hooks\";\r\nimport { getRegisterError } from \"../services/auth/selectors\";\r\n\r\nconst RegisterPage = () => {\r\n  const registerError = useSelector(getRegisterError);\r\n  const dispatch = useDispatch();\r\n  const [form, setValue] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(register(form));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h1 className={`${styles.formTitle} text text_type_main-medium mb-6 `}>\r\n          Регистрация\r\n        </h1>\r\n        <div className={`${styles.formField} mb-6`}>\r\n          <Input\r\n            type={\"text\"}\r\n            placeholder={\"Имя\"}\r\n            onChange={onChange}\r\n            value={form.name}\r\n            name={\"name\"}\r\n            error={false}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        <div className={`${styles.formField} ${styles.formEmail} mb-6`}>\r\n          <Input\r\n            type={\"email\"}\r\n            placeholder={\"E-mail\"}\r\n            onChange={onChange}\r\n            value={form.email}\r\n            name={\"email\"}\r\n            error={false}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        <div className={`${styles.formField} mb-6`}>\r\n          <PasswordInput\r\n            onChange={onChange}\r\n            value={form.password}\r\n            name={\"password\"}\r\n          />\r\n        </div>\r\n        {registerError && (\r\n          <p\r\n            className=\"pt-2 pb-5 text text_type_main-small\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            {registerError}\r\n          </p>\r\n        )}\r\n        <div className={`${styles.formButton} mb-20`}>\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Зарегистрироваться\r\n          </Button>\r\n        </div>\r\n        <p\r\n          className={`${styles.formLinkItem} text text_type_main-default text_color_inactive mb-4`}\r\n        >\r\n          Уже зарегистрированы?\r\n          <Link className={styles.formLink} to={\"/login\"}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  ChangeEvent,\r\n  FormEvent,\r\n} from \"react\";\r\nimport styles from \"./page.module.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../types/hooks\";\r\nimport { forgotPassword } from \"../services/auth/actions\";\r\nimport { getForgotPassword } from \"../services/auth/selectors\";\r\n\r\nconst ForgotPasswordPage = () => {\r\n  const forgotPasswordObj = useSelector(getForgotPassword);\r\n  const dispatch = useDispatch();\r\n  const [form, setValue] = useState({\r\n    email: \"\",\r\n  });\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    dispatch(forgotPassword(form));\r\n  };\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => inputRef.current?.focus(), []);\r\n\r\n  if (forgotPasswordObj.emailSend) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/reset-password\",\r\n          state: { fromForgotPage: true },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h1 className={`${styles.formTitle} text text_type_main-medium mb-6 `}>\r\n          1. Восстановление пароля\r\n        </h1>\r\n        <div className={`${styles.formField} mb-6`}>\r\n          <Input\r\n            ref={inputRef}\r\n            type={\"email\"}\r\n            placeholder={\"Укажите e-mail\"}\r\n            onChange={onChange}\r\n            value={form.email}\r\n            name={\"email\"}\r\n            error={false}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        {(forgotPasswordObj.emailSend || forgotPasswordObj.errorMessage) && (\r\n          <p\r\n            className={`${styles.formErrorMsg} pt-2 pb-5 text text_type_main-small`}\r\n          >\r\n            {forgotPasswordObj.message || forgotPasswordObj.errorMessage}\r\n          </p>\r\n        )}\r\n        {form.email && (\r\n          <div className={`${styles.formButton} mb-20`}>\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Восстановить\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        <p\r\n          className={`${styles.formLinkItem} text text_type_main-default text_color_inactive mb-4`}\r\n        >\r\n          Вспомнили пароль?\r\n          <Link className={styles.formLink} to={\"/login\"}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport styles from \"./page.module.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  PasswordInput,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../types/hooks\";\r\nimport { getForgotPassword } from \"../services/auth/selectors\";\r\nimport { forgotPassword } from \"../services/auth/actions\";\r\n\r\ntype TLocationState = {\r\n  fromForgotPage: boolean;\r\n};\r\nconst ResetPasswordPage = () => {\r\n  const forgotPasswordObj = useSelector(getForgotPassword);\r\n  const history = useHistory<TLocationState>();\r\n  const dispatch = useDispatch();\r\n  const [form, setValue] = useState({\r\n    password: \"\",\r\n    token: \"\",\r\n  });\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    dispatch(forgotPassword(form));\r\n  };\r\n\r\n  const fromForgotPage = history.location.state?.fromForgotPage;\r\n  if (!fromForgotPage) {\r\n    return <Redirect to={{ pathname: \"/forgot-password\" }} />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h1 className={`${styles.formTitle} text text_type_main-medium mb-6 `}>\r\n          2. Восстановление пароля\r\n        </h1>\r\n        <div\r\n          className={`${styles.formField} ${styles.formFieldNewPassword} mb-6`}\r\n        >\r\n          <PasswordInput\r\n            onChange={onChange}\r\n            value={form.password}\r\n            name={\"password\"}\r\n          />\r\n        </div>\r\n        <div className={`${styles.formField} mb-6`}>\r\n          <Input\r\n            type={\"text\"}\r\n            placeholder={\"Введите код из письма\"}\r\n            onChange={onChange}\r\n            value={form.token}\r\n            name={\"token\"}\r\n            error={false}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        {(forgotPasswordObj.errorMessage || forgotPasswordObj.message) && (\r\n          <p\r\n            className={`${styles.formErrorMsg} pt-2 pb-5 text text_type_main-small`}\r\n          >\r\n            {forgotPasswordObj.errorMessage || forgotPasswordObj.message}\r\n          </p>\r\n        )}\r\n        {form.password && form.token && (\r\n          <div className={`${styles.formButton} mb-20`}>\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Сохранить\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <p\r\n          className={`${styles.formLinkItem} text text_type_main-default text_color_inactive mb-4`}\r\n        >\r\n          Вспомнили пароль?\r\n          <Link className={styles.formLink} to={\"/login\"}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n","import React, { MouseEvent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { signOut } from \"../../services/auth/actions\";\r\nimport { useDispatch } from \"../../types/hooks\";\r\nimport styles from \"./profile-sidebar.module.css\";\r\n\r\nconst ProfileSidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    dispatch(signOut());\r\n  };\r\n  return (\r\n    <aside className={`${styles.profileSidebar}  mr-15`}>\r\n      <ul className={`${styles.sidebar} mb-20`}>\r\n        <li className={`${styles.sidebarItem}`}>\r\n          <NavLink\r\n            exact={true}\r\n            to={\"/profile\"}\r\n            className={`${styles.sidebarLink} text text_type_main-medium text_color_inactive`}\r\n            activeClassName={`${styles.sidebarLinkCurrent}`}\r\n          >\r\n            Профиль\r\n          </NavLink>\r\n        </li>\r\n        <li className={`${styles.sidebarItem}`}>\r\n          <NavLink\r\n            exact={true}\r\n            to=\"/profile/orders\"\r\n            className={`${styles.sidebarLink} text text_type_main-medium text_color_inactive`}\r\n            activeClassName={`${styles.sidebarLinkCurrent}`}\r\n          >\r\n            История заказов\r\n          </NavLink>\r\n        </li>\r\n        <li className={`${styles.sidebarItem}`}>\r\n          <button\r\n            onClick={logoutHandler}\r\n            className={`${styles.sidebarLink} reset-btn text text_type_main-medium text_color_inactive`}\r\n          >\r\n            Выход\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <p\r\n        className={`${styles.sidebarSubText} text text_type_main-default text_color_inactive`}\r\n      >\r\n        В этом разделе вы можете <br /> изменить свои персональные данные\r\n      </p>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default ProfileSidebar;\r\n","export const NAME: \"currentUser\" = \"currentUser\";\r\n\r\nexport const UPDATE_USER_DATA: \"UPDATE_USER_DATA\" = `UPDATE_USER_DATA`;\r\nexport const UPDATE_USER_DATA_SEND: \"UPDATE_USER_DATA_SEND\" = `UPDATE_USER_DATA_SEND`;\r\nexport const UPDATE_USER_DATA_ERROR: \"UPDATE_USER_DATA_ERROR\" = `UPDATE_USER_DATA_ERROR`;\r\n","import { NAME } from \"./constants\";\r\nimport { RootState } from \"../../types\";\r\n\r\nexport const getUpdatedUser = (store: RootState) => store[NAME].data;\r\nexport const getUserUpdateSending = (store: RootState) =>\r\n  store[NAME].userUpdateSending;\r\nexport const getUserUpdateError = (store: RootState) =>\r\n  store[NAME].userUpdateError;\r\n","import {\r\n  UPDATE_USER_DATA,\r\n  UPDATE_USER_DATA_SEND,\r\n  UPDATE_USER_DATA_ERROR,\r\n} from \"./constants\";\r\nimport { TUser } from \"../../types/data\";\r\n\r\nexport interface IUpdateUserRequest {\r\n  readonly type: typeof UPDATE_USER_DATA;\r\n  payload: boolean;\r\n}\r\nexport interface IUpdateUserData {\r\n  readonly type: typeof UPDATE_USER_DATA_SEND;\r\n  payload: {\r\n    success: boolean;\r\n    user: TUser;\r\n  };\r\n}\r\n\r\nexport interface IUpdateUserError {\r\n  readonly type: typeof UPDATE_USER_DATA_ERROR;\r\n  payload: boolean;\r\n}\r\nexport type TUserUnion =\r\n  | IUpdateUserRequest\r\n  | IUpdateUserData\r\n  | IUpdateUserError;\r\n\r\nexport const updateUserRequestAction = (\r\n  payload: boolean\r\n): IUpdateUserRequest => ({\r\n  type: UPDATE_USER_DATA,\r\n  payload,\r\n});\r\nexport const updateUserSuccessAction = (payload: {\r\n  success: boolean;\r\n  user: TUser;\r\n}): IUpdateUserData => ({\r\n  type: UPDATE_USER_DATA_SEND,\r\n  payload,\r\n});\r\nexport const updateUserErrorAction = (payload: boolean): IUpdateUserError => ({\r\n  type: UPDATE_USER_DATA_ERROR,\r\n  payload,\r\n});\r\n","import React, { useState, SyntheticEvent, ChangeEvent } from \"react\";\r\nimport styles from \"../page.module.css\";\r\nimport stylesProfile from \"./profile-form.module.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDispatch, useSelector } from \"../../types/hooks\";\r\nimport { getUser } from \"../../services/auth/selectors\";\r\nimport {\r\n  getUpdatedUser,\r\n  getUserUpdateError,\r\n  getUserUpdateSending,\r\n} from \"../../services/user/selectors\";\r\nimport { updateUser } from \"../../services/user/actions\";\r\nimport { TUser } from \"../../types/data\";\r\n\r\nconst ProfileEdit = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(getUser);\r\n  const updatedUser = useSelector(getUpdatedUser);\r\n  const userUpdateSending = useSelector(getUserUpdateSending);\r\n  const userUpdateError = useSelector(getUserUpdateError);\r\n\r\n  const [form, setValue] = useState<TUser>({\r\n    name: updatedUser?.user?.name || user?.name || \"\",\r\n    email: updatedUser?.user?.email || user?.email || \"\",\r\n    password: \"\",\r\n  });\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser(form));\r\n  };\r\n\r\n  const handleCancel = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (user) {\r\n      setValue({ ...user, password: \"\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.wrap} ${stylesProfile.profileWrap}`}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <div className={`${styles.formField} mb-6`}>\r\n          <Input\r\n            type={\"text\"}\r\n            placeholder={\"Имя\"}\r\n            onChange={onChange}\r\n            value={form.name}\r\n            name={\"name\"}\r\n            icon={\"EditIcon\"}\r\n            error={false}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        <div className={`${styles.formField} mb-6`}>\r\n          <Input\r\n            type={\"email\"}\r\n            placeholder={\"Логин\"}\r\n            onChange={onChange}\r\n            value={form.email}\r\n            name={\"email\"}\r\n            icon={\"EditIcon\"}\r\n            error={false}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        <div className={`${styles.formField} mb-6`}>\r\n          <Input\r\n            type={\"password\"}\r\n            placeholder={\"Пароль\"}\r\n            onChange={onChange}\r\n            value={form.password}\r\n            name={\"password\"}\r\n            icon={\"EditIcon\"}\r\n            error={false}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        {!userUpdateSending &&\r\n          !userUpdateError &&\r\n          updatedUser &&\r\n          updatedUser.status && (\r\n            <p\r\n              className=\"pt-2 pb-5 text text_type_main-small\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              Пользователь успешно обновлён\r\n            </p>\r\n          )}\r\n        <div className={`${styles.formButtonsContainer}`}>\r\n          <button\r\n            type={\"reset\"}\r\n            onClick={handleCancel}\r\n            className={`${styles.formResetBtn} reset-btn text text_type_main-default mr-5`}\r\n          >\r\n            Отмена\r\n          </button>\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Сохранить\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","import { Location } from \"history\";\r\nimport { TInitialStateAuth } from \"../services/auth/reducer\";\r\nimport { TInitialStateConstructor } from \"../services/constructor/reducer\";\r\nimport { TInitialStateIngredients } from \"../services/ingredients/reducer\";\r\nimport { TInitialStateOrder } from \"../services/order/reducer\";\r\nimport { TInitialStateUser } from \"../services/user/reducer\";\r\n\r\nexport type TProduct = {\r\n  _id: string;\r\n  uuid?: string;\r\n  type: string;\r\n  price: number;\r\n  name: string;\r\n  image: string;\r\n  image_large: string;\r\n  image_mobile: string;\r\n  proteins: number;\r\n  fat: number;\r\n  calories: number;\r\n  carbohydrates: number;\r\n};\r\n\r\nexport type TLocationState = {\r\n  background: Location;\r\n  orderModal: any;\r\n};\r\n\r\nexport enum EStatus {\r\n  Done = \"done\",\r\n  Created = \"created\",\r\n  Pending = \"pending\",\r\n}\r\nexport type TOrderCreated = {\r\n  name: string;\r\n  order: { number: boolean };\r\n  success: boolean;\r\n};\r\nexport type TOrderInfo = {\r\n  ingredients: string[];\r\n  _id: string;\r\n  status: EStatus;\r\n  number: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  name: string;\r\n};\r\nexport type TUser = {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport type TInitialState =\r\n  | TInitialStateAuth\r\n  | TInitialStateConstructor\r\n  | TInitialStateIngredients\r\n  | TInitialStateOrder\r\n  | TInitialStateUser;\r\n","import { SERVER_URL } from \"../../utils/constants\";\r\nimport { getCookie } from \"../../utils/cookie\";\r\nimport { fetchWithRefresh } from \"../../utils/auth-api\";\r\nimport {\r\n  updateUserErrorAction,\r\n  updateUserRequestAction,\r\n  updateUserSuccessAction,\r\n} from \"./actions-type\";\r\nimport { AppDispatch } from \"../../types\";\r\nimport { TUser } from \"../../types/data\";\r\n\r\nexport function updateUser({ name, password, email }: TUser) {\r\n  return async function (dispatch: AppDispatch) {\r\n    dispatch(updateUserRequestAction(true));\r\n    const token = localStorage.getItem(\"refreshToken\");\r\n    if (token) {\r\n      return fetchWithRefresh(`${SERVER_URL}/auth/user`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${getCookie(\"accessToken\")}`,\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      }).then((res) => {\r\n        const { user, success } = res;\r\n\r\n        dispatch(updateUserSuccessAction({ success, user }));\r\n        dispatch(updateUserRequestAction(false));\r\n      });\r\n    } else {\r\n      dispatch(updateUserErrorAction(false));\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n","export const NAME: \"orders\" = \"orders\";\r\n\r\nexport const WS_CONNECTION_START: \"WS_CONNECTION_START\" = \"WS_CONNECTION_START\";\r\nexport const WS_CONNECTION_SUCCESS: \"WS_CONNECTION_SUCCESS\" =\r\n  \"WS_CONNECTION_SUCCESS\";\r\nexport const WS_CONNECTION_ERROR: \"WS_CONNECTION_ERROR\" = \"WS_CONNECTION_ERROR\";\r\nexport const WS_CONNECTION_CLOSED: \"WS_CONNECTION_CLOSED\" =\r\n  \"WS_CONNECTION_CLOSED\";\r\nexport const WS_GET_MESSAGE: \"WS_GET_MESSAGE\" = \"WS_GET_MESSAGE\";\r\n","import { NAME } from \"./constants\";\r\nimport { RootState } from \"../../types\";\r\n\r\nexport const getWsConnected = (store: RootState) => {\r\n  return store[NAME];\r\n};\r\nexport const getWsMessages = (store: any) => {\r\n  return store[NAME].messages;\r\n};\r\n","import { TProduct } from \"../types/data\";\r\n\r\nexport const getTotalOrderSum = (\r\n  orderIngredients: string[],\r\n  ingredients: TProduct[]\r\n) => {\r\n  return orderIngredients.reduce((acc, current) => {\r\n    const product = ingredients.find((el) => el._id === current);\r\n    if (product) {\r\n      const { price, type } = product;\r\n      acc += type === \"bun\" ? price * 2 : price;\r\n    }\r\n\r\n    return acc;\r\n  }, 0);\r\n};\r\n","import { EStatus } from \"../types/data\";\r\nexport const formatStatusOrder = (status: EStatus) => {\r\n  switch (status) {\r\n    case EStatus.Created: {\r\n      return \"Создан\";\r\n    }\r\n    case EStatus.Done: {\r\n      return \"Готово\";\r\n    }\r\n    case EStatus.Pending: {\r\n      return \"Готовится\";\r\n    }\r\n    default: {\r\n      return \"\";\r\n    }\r\n  }\r\n};\r\n","import dayjs from \"dayjs\";\r\nimport \"dayjs/locale/ru\";\r\n\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport isToday from \"dayjs/plugin/isToday\";\r\nimport isYesterday from \"dayjs/plugin/isYesterday\";\r\ndayjs.locale(\"ru\");\r\ndayjs.extend(relativeTime);\r\ndayjs.extend(isToday);\r\ndayjs.extend(isYesterday);\r\n\r\nexport function getFormattedDate(d: string, ordNumb = 0) {\r\n  // console.log(ordNumb, d, dayjs(d).isYesterday());\r\n  if (dayjs(d).isToday()) {\r\n    return `Сегодня, ${dayjs(d).format(\"HH:mm UTCZ\")}`;\r\n  }\r\n\r\n  if (dayjs(d).isYesterday()) {\r\n    return `Вчера, ${dayjs(d).format(\"HH:mm UTCZ\")}`;\r\n  }\r\n\r\n  return `${dayjs(d).fromNow()}`;\r\n}\r\n","import React, { FC, useState } from \"react\";\r\nimport stylesOrderList from \"./order-list.module.css\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"../burger-ingredients/burger-ingredients.module.css\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { TOrderInfo } from \"../../types/data\";\r\nimport { useSelector } from \"../../types/hooks\";\r\nimport { getIngredients } from \"../../services/ingredients/selectors\";\r\nimport { getTotalOrderSum } from \"../../utils/getTotalSum\";\r\nimport { formatStatusOrder } from \"../../utils/formatStatusOrder\";\r\nimport { getFormattedDate } from \"../../utils/formateDate\";\r\n\r\ntype TOrderList = {\r\n  className?: string;\r\n  path: string;\r\n  orders: TOrderInfo[];\r\n  withOrderStatus?: boolean;\r\n};\r\nconst OrderList: FC<TOrderList> = ({\r\n  className = \"\",\r\n  path = \"\",\r\n  orders,\r\n  withOrderStatus = false,\r\n}) => {\r\n  const ingredients = useSelector(getIngredients);\r\n  const [orderStatus] = useState(true);\r\n  const location = useLocation();\r\n  if (!ingredients || !orders) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ul\r\n      className={`${stylesOrderList.orderList} ${className} custom-scroll pr-2`}\r\n    >\r\n      {orders.map((order) => (\r\n        <li\r\n          className={`${stylesOrderList.orderItem} pt-6 pr-6 pb-6 pl-6`}\r\n          key={order._id}\r\n        >\r\n          <Link\r\n            className={`${styles.ListItemLink}`}\r\n            to={{\r\n              pathname: path ? `/${path}/${order._id}` : \"\",\r\n              // This is the trick! This link sets\r\n              // the `background` in location state.\r\n              state: {\r\n                background: location,\r\n                orderModal: {\r\n                  order,\r\n                  totalOrderSum: getTotalOrderSum(\r\n                    order.ingredients,\r\n                    ingredients\r\n                  ),\r\n                  orderDate: order.createdAt,\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            <div className={`${stylesOrderList.orderItemHeader} mb-6`}>\r\n              <span className={`text text_type_digits-default`}>\r\n                #{order.number}\r\n              </span>\r\n              <span\r\n                className={`text text_type_main-default text_color_inactive`}\r\n              >\r\n                {getFormattedDate(order.createdAt, order.number)}\r\n              </span>\r\n            </div>\r\n            <h2 className={`text text_type_main-medium mb-6`}>{order.name}</h2>\r\n            {withOrderStatus && orderStatus && (\r\n              <p\r\n                className={`${stylesOrderList.orderStatus} text text_type_main-default mt-2 mb-6`}\r\n              >\r\n                {formatStatusOrder(order.status)}\r\n              </p>\r\n            )}\r\n            <div className={`${stylesOrderList.orderItemInfo}`}>\r\n              <ul className={`${stylesOrderList.ingredientsList}`}>\r\n                {order.ingredients.map((productId, index, array) => {\r\n                  const currentProduct = ingredients.find(\r\n                    (el) => el._id === productId\r\n                  );\r\n\r\n                  if (index < 6) {\r\n                    return (\r\n                      <li\r\n                        className={`${stylesOrderList.ingredientsListItem}`}\r\n                        key={index}\r\n                      >\r\n                        {currentProduct ? (\r\n                          <img\r\n                            src={currentProduct.image}\r\n                            alt={currentProduct.name}\r\n                          />\r\n                        ) : null}\r\n\r\n                        {index === 5 && array.length > 6 ? (\r\n                          <span\r\n                            className={`${stylesOrderList.ingredientsListItemCount} text text_type_main-default`}\r\n                          >\r\n                            +{array.length - (index + 1)}\r\n                          </span>\r\n                        ) : null}\r\n                      </li>\r\n                    );\r\n                  }\r\n                  return null;\r\n                })}\r\n              </ul>\r\n              <span className={`${stylesOrderList.orderItemPrice} ml-6`}>\r\n                <span\r\n                  className={`${stylesOrderList.orderItemPriceNum} text text_type_digits-default`}\r\n                >\r\n                  {getTotalOrderSum(order.ingredients, ingredients)}\r\n                </span>\r\n                <CurrencyIcon type=\"primary\" />\r\n              </span>\r\n            </div>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_START,\r\n} from \"../../services/websoket/constants\";\r\nimport { useDispatch, useSelector } from \"../../types/hooks\";\r\nimport { getWsMessages } from \"../../services/websoket/selectors\";\r\nimport { TOrderInfo } from \"../../types/data\";\r\nimport OrderList from \"../../components/order-list/order-list\";\r\nimport styles from \"./profile.module.css\";\r\nimport Preloader from \"../../components/preloader/preloader\";\r\n\r\nconst ProfileOrders = () => {\r\n  const message = useSelector(getWsMessages);\r\n  const dispatch = useDispatch();\r\n  const [orders, setOrders] = useState<TOrderInfo[]>([]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: WS_CONNECTION_START, withToken: true });\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      console.log(message.orders);\r\n      setOrders(message.orders);\r\n    }\r\n  }, [message]);\r\n\r\n  if (!orders.length) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <OrderList\r\n      className={styles.profileOrders}\r\n      path={\"profile/orders\"}\r\n      orders={orders}\r\n      withOrderStatus\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileOrders;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport styles from \"./order-info.module.css\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TOrderInfo } from \"../../types/data\";\r\nimport { useDispatch, useSelector } from \"../../types/hooks\";\r\nimport { getIngredients } from \"../../services/ingredients/selectors\";\r\nimport { formatStatusOrder } from \"../../utils/formatStatusOrder\";\r\nimport {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_START,\r\n} from \"../../services/websoket/constants\";\r\nimport { getWsMessages } from \"../../services/websoket/selectors\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getTotalOrderSum } from \"../../utils/getTotalSum\";\r\nimport { getFormattedDate } from \"../../utils/formateDate\";\r\n\r\ntype TOrderModalInfo = {\r\n  isModal?: boolean;\r\n  orderModal?: {\r\n    order: TOrderInfo;\r\n    totalOrderSum: number;\r\n    orderDate: string;\r\n  };\r\n};\r\nconst OrderModalInfo: FC<TOrderModalInfo> = ({\r\n  isModal = false,\r\n  orderModal,\r\n}) => {\r\n  const [orderFull, setOrderFull] = useState(orderModal);\r\n  const { id } = useParams<{ id: string }>();\r\n  const ingredients = useSelector(getIngredients);\r\n  const message = useSelector(getWsMessages);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!orderModal) {\r\n      dispatch({ type: WS_CONNECTION_START, withToken: false });\r\n    }\r\n\r\n    return () => {\r\n      if (!orderModal) {\r\n        dispatch({ type: WS_CONNECTION_CLOSED });\r\n      }\r\n    };\r\n  }, [dispatch, orderModal]);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      const foundOrder: TOrderInfo = message.orders.find(\r\n        (order: TOrderInfo) => order._id === id\r\n      );\r\n      if (foundOrder) {\r\n        setOrderFull({\r\n          order: foundOrder,\r\n          orderDate: foundOrder.createdAt,\r\n          totalOrderSum: getTotalOrderSum(foundOrder.ingredients, ingredients),\r\n        });\r\n      }\r\n    }\r\n  }, [message, id, ingredients]);\r\n\r\n  if (!orderFull || !ingredients) {\r\n    return null;\r\n  }\r\n\r\n  const { order } = orderFull;\r\n\r\n  interface IOrderListObj {\r\n    [prop: string]: number;\r\n  }\r\n  const orderListObj: IOrderListObj = order.ingredients.reduce(\r\n    (acc: IOrderListObj, current) => {\r\n      if (acc[current]) {\r\n        acc[current] += 1;\r\n      } else {\r\n        acc[current] = 1;\r\n      }\r\n      return acc;\r\n    },\r\n    {}\r\n  );\r\n  return (\r\n    <div className={styles.orderWrap}>\r\n      <p\r\n        className={`${styles.orderNum} ${\r\n          isModal ? styles.left : \"\"\r\n        } text text_type_digits-default mb-10`}\r\n      >\r\n        #{order.number}\r\n      </p>\r\n      <h2 className={`${styles.orderName} text text_type_main-medium mb-3`}>\r\n        {order.name}\r\n      </h2>\r\n      <p className={`${styles.orderStatus} text text_type_main-default mb-15`}>\r\n        {formatStatusOrder(order.status)}\r\n      </p>\r\n      <p className={`text text_type_main-medium mb-6`}>Состав:</p>\r\n      <ul className={`${styles.orderList} custom-scroll mb-10 pr-6`}>\r\n        {Object.entries(orderListObj).map(([productId, productCount]) => {\r\n          const currentProduct = ingredients.find((el) => el._id === productId);\r\n\r\n          if (!currentProduct) {\r\n            return null;\r\n          }\r\n          if (currentProduct.type === \"bun\") {\r\n            productCount *= 2;\r\n          }\r\n          return (\r\n            <li className={`${styles.orderListItem} mb-4`} key={productId}>\r\n              <div className={`${styles.itemImg} mr-4`}>\r\n                {currentProduct ? (\r\n                  <img src={currentProduct.image} alt={currentProduct.name} />\r\n                ) : null}\r\n              </div>\r\n              <span\r\n                className={`${styles.itemName} text text_type_main-default mr-4`}\r\n              >\r\n                {order.name}\r\n              </span>\r\n              <div className={`${styles.itemTotal}`}>\r\n                <span\r\n                  className={`${styles.itemCount} text text_type_digits-default`}\r\n                >\r\n                  {productCount}\r\n                </span>\r\n                <span className=\"text text_type_digits-default\">x</span>\r\n                <span\r\n                  className={`${styles.itemPrice} text text_type_digits-default`}\r\n                >\r\n                  {currentProduct.price}\r\n                </span>\r\n                <CurrencyIcon type=\"primary\" />\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <div className={styles.orderFooter}>\r\n        <div\r\n          className={`${styles.orderTime} text text_type_main-default text_color_inactive`}\r\n        >\r\n          {getFormattedDate(orderFull.orderDate)}\r\n        </div>\r\n        <div className={styles.orderTotal}>\r\n          <span\r\n            className={`${styles.orderTotalPrice} text text_type_digits-default`}\r\n          >\r\n            {orderFull.totalOrderSum}\r\n          </span>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderModalInfo;\r\n","import React from \"react\";\r\nimport styles from \"./profile.module.css\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport ProfileSidebar from \"./profile-sidebar\";\r\nimport ProfileEdit from \"./profile-edit\";\r\nimport ProfileOrders from \"./profile-orders\";\r\nimport OrderInfo from \"../../components/order-modal-info/order-modal-info\";\r\nimport Modal from \"../../components/modal/modal\";\r\nimport { TLocationState } from \"../../types/data\";\r\n\r\nconst ProfilePage = () => {\r\n  const { path } = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation<TLocationState>();\r\n  const action = history.action === \"PUSH\" || history.action === \"REPLACE\";\r\n  const modalOrderOpen = action && location.state && location.state.background;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.profileContainer}>\r\n        <Switch location={modalOrderOpen || location}>\r\n          <Route path={`${path}`} exact>\r\n            <ProfileSidebar />\r\n            <ProfileEdit />\r\n          </Route>\r\n          <Route path={`${path}/orders/`} exact>\r\n            <ProfileSidebar />\r\n            <ProfileOrders />\r\n          </Route>\r\n          <Route path={`${path}/orders/:id`} exact>\r\n            <OrderInfo />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n      {modalOrderOpen && (\r\n        <Route path=\"/orders/:id\">\r\n          <Modal visible={!!modalOrderOpen} setFunc={history.goBack}>\r\n            <OrderInfo isModal />\r\n          </Modal>\r\n        </Route>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from \"react\";\r\nimport styles from \"./page.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ErrorPage404 = () => {\r\n  return (\r\n    <div className={styles.wrap} style={{ textAlign: \"center\" }}>\r\n      <h1 className=\"text text_type_digits-large mb-6\">404</h1>\r\n      <p className=\"text text_type_main-default mb-6\">Страница не найдена</p>\r\n      <Link\r\n        className=\"text text_type_main-default text_color_inactive\"\r\n        to={\"/\"}\r\n      >\r\n        На главную\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage404;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./feed.module.css\";\r\nimport OrderList from \"../../components/order-list/order-list\";\r\nimport { useSelector, useDispatch } from \"../../types/hooks\";\r\nimport { EStatus, TOrderInfo } from \"../../types/data\";\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_CLOSED,\r\n} from \"../../services/websoket/constants\";\r\nimport { getWsMessages } from \"../../services/websoket/selectors\";\r\nimport Preloader from \"../../components/preloader/preloader\";\r\n\r\nconst FeedPage = () => {\r\n  const message = useSelector(getWsMessages);\r\n  const [orders, setOrders] = useState<TOrderInfo[]>([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [totalDay, setTotalDay] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: WS_CONNECTION_START, withToken: false });\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      console.log(message.orders);\r\n      setOrders(message.orders);\r\n      setTotal(message.total);\r\n      setTotalDay(message.totalToday);\r\n    }\r\n  }, [message]);\r\n  const ordersDone = orders\r\n    .filter((order) => order.status === EStatus.Done)\r\n    .slice(0, 6);\r\n  const ordersPending = orders\r\n    .filter((order) => order.status === EStatus.Pending)\r\n    .slice(0, 6);\r\n\r\n  if (!orders.length) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={styles.feedPage}>\r\n      <h1 className=\"text text_type_main-large mb-5\">Лента заказов</h1>\r\n      <div className={styles.feedPageContainer}>\r\n        <div className={`${styles.feedPageCol} mr-15`}>\r\n          <OrderList className={styles.orderList} path=\"feed\" orders={orders} />\r\n        </div>\r\n        <div className={styles.feedPageCol}>\r\n          <div className={`${styles.orders} mb-15`}>\r\n            {ordersDone.length ? (\r\n              <div className={`${styles.orderCol} mr-9`}>\r\n                <span\r\n                  className={`${styles.orderColTitle} text text_type_main-medium mb-6`}\r\n                >\r\n                  Готовы\r\n                </span>\r\n                <ul className={`${styles.orderColList}`}>\r\n                  {ordersDone.map((order) => (\r\n                    <li\r\n                      className={`${styles.orderColListItem} ${styles.ready} text text_type_digits-default mb-2`}\r\n                      key={order._id}\r\n                    >\r\n                      {order.number}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ) : null}\r\n            {ordersPending.length ? (\r\n              <div className={`${styles.orderCol}`}>\r\n                <span\r\n                  className={`${styles.orderColTitle} text text_type_main-medium mb-6`}\r\n                >\r\n                  В работе\r\n                </span>\r\n                <ul className={`${styles.orderColList}`}>\r\n                  {ordersPending.map((order) => (\r\n                    <li\r\n                      className={`${styles.orderColListItem} text text_type_digits-default mb-2`}\r\n                      key={order._id}\r\n                    >\r\n                      {order.number}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className=\"mb-15\">\r\n            <span className=\"text text_type_main-medium\">\r\n              Выполнено за все время:\r\n            </span>\r\n            <span\r\n              className={`${styles.totalBlockNum} text text_type_digits-large`}\r\n            >\r\n              {total}\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"mb-15\">\r\n            <span className=\"text text_type_main-medium\">\r\n              Выполнено за сегодня:\r\n            </span>\r\n            <span\r\n              className={`${styles.totalBlockNum} text text_type_digits-large`}\r\n            >\r\n              {totalDay}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPage;\r\n","import React, { FC } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"../types/hooks\";\r\nimport { getIsAuthChecking, getUser } from \"../services/auth/selectors\";\r\nimport Preloader from \"./preloader/preloader\";\r\n\r\ntype TProtectedRoute = {\r\n  path: string;\r\n  exact?: boolean;\r\n};\r\nconst ProtectedRoute: FC<TProtectedRoute> = ({\r\n  children,\r\n  path,\r\n  exact = false,\r\n}) => {\r\n  const user = useSelector(getUser);\r\n  const isAuthChecking = useSelector(getIsAuthChecking);\r\n\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      path={path}\r\n      render={({ location }) =>\r\n        isAuthChecking ? (\r\n          <Preloader />\r\n        ) : user ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n// ProtectedRoute.propTypes = {\r\n//   path: PropTypes.string.isRequired,\r\n//   children: PropTypes.element.isRequired,\r\n//   exact: PropTypes.bool,\r\n//   isAuthChecking: PropTypes.bool,\r\n// };\r\n\r\nexport default ProtectedRoute;\r\n","import React, { FC } from \"react\";\r\nimport styles from \"./ingredient-details.module.css\";\r\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDispatch, useSelector } from \"../../types/hooks\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getIngredients } from \"../../services/ingredients/selectors\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport { TProduct } from \"../../types/data\";\r\nimport {\r\n  addBunAction,\r\n  addIngredientAction,\r\n} from \"../../services/constructor/action-type\";\r\n\r\ntype TIngredientDetails = {\r\n  setFunc?: () => void;\r\n  withAddButton?: boolean;\r\n};\r\n\r\nconst IngredientDetails: FC<TIngredientDetails> = ({\r\n  setFunc = () => {},\r\n  withAddButton = false,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams<{ id?: string }>();\r\n  const ingredients = useSelector(getIngredients);\r\n  const product = ingredients.find((product: TProduct) => product._id === id);\r\n\r\n  interface IStatProductMap {\r\n    [propertyName: string]: string;\r\n  }\r\n  const statProductMap: IStatProductMap = {\r\n    calories: \"Калории,ккал\",\r\n    proteins: \"Белки,г\",\r\n    fat: \"Жиры,г\",\r\n    carbohydrates: \"Углеводы,г\",\r\n  };\r\n  const addOnOrderHandler = () => {\r\n    if (product) {\r\n      const productType = product.type;\r\n\r\n      if (productType === \"bun\") {\r\n        dispatch(addBunAction(product));\r\n      } else {\r\n        dispatch(addIngredientAction(product));\r\n      }\r\n    }\r\n    setFunc();\r\n  };\r\n\r\n  if (!product) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={`${styles.container}`}>\r\n      <div className={`${styles.ImgWrap} mb-4`}>\r\n        <img src={product.image_large} alt={product.name} />\r\n      </div>\r\n\r\n      <strong className={`mb-8 text text_type_main-medium`}>\r\n        {product.name}\r\n      </strong>\r\n\r\n      <ul className={`${styles.statList} mb-4`}>\r\n        {Object.entries(statProductMap).map(([type, name]) => (\r\n          <li className={`${styles.statItem} mr-5`} key={type}>\r\n            <span\r\n              className={`${styles.statName} text text_type_main-default text_color_inactive`}\r\n            >\r\n              {name}\r\n            </span>\r\n            <span\r\n              className={`text text_type_digits-default text_color_inactive`}\r\n            >\r\n              {product[type as keyof TProduct]}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {withAddButton && (\r\n        <Button type=\"primary\" size=\"large\" onClick={addOnOrderHandler}>\r\n          Добавить в бургер\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientDetails;\r\n","import React, { FC } from \"react\";\r\nimport { useSelector } from \"../types/hooks\";\r\nimport { getIsAuthChecking, getUser } from \"../services/auth/selectors\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\nimport Preloader from \"./preloader/preloader\";\r\nimport { Location } from \"history\";\r\n\r\ntype TLocationState = {\r\n  from: Location;\r\n};\r\ntype TAuthProtectedRoute = {\r\n  path: string;\r\n  exact?: boolean;\r\n};\r\nconst AuthProtectedRoute: FC<TAuthProtectedRoute> = ({\r\n  children,\r\n  path,\r\n  exact = true,\r\n}) => {\r\n  const location = useLocation<TLocationState>();\r\n  const isAuthChecking = useSelector(getIsAuthChecking);\r\n  const user = useSelector(getUser);\r\n  const { from } = location.state || {\r\n    from: { pathname: \"/\" },\r\n  };\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      path={path}\r\n      render={() =>\r\n        isAuthChecking ? (\r\n          <Preloader />\r\n        ) : user ? (\r\n          <Redirect to={from} />\r\n        ) : (\r\n          children\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthProtectedRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport appStyles from \"./app.module.css\";\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport BurgerIngredients from \"../burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../burger-constructor/burger-constructor\";\r\nimport { useDispatch } from \"../../types/hooks\";\r\nimport { getItems } from \"../../services/ingredients/actions\";\r\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  LoginPage,\r\n  RegisterPage,\r\n  ProfilePage,\r\n  ResetPasswordPage,\r\n  ForgotPasswordPage,\r\n  ErrorPage404,\r\n  FeedPage,\r\n} from \"../../pages\";\r\nimport { checkAuth } from \"../../services/auth/actions\";\r\nimport ProtectedRoute from \"../protected-route\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport AuthProtectedRoute from \"../auth-protected-route\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderInfo from \"../order-modal-info/order-modal-info\";\r\nimport { TLocationState } from \"../../types/data\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getItems());\r\n    dispatch(checkAuth());\r\n  }, [dispatch]);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation<TLocationState>();\r\n  const action = history.action === \"PUSH\" || history.action === \"REPLACE\";\r\n  const modalIngredientOpen =\r\n    action && location.state && location.state.background;\r\n  const modalOrderOpen =\r\n    action &&\r\n    location.state &&\r\n    location.state.background &&\r\n    location.state.orderModal;\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <main className={`${appStyles.container} ${appStyles.flex}`}>\r\n        <Switch location={modalIngredientOpen || modalOrderOpen || location}>\r\n          <Route path=\"/\" exact={true}>\r\n            <BurgerIngredients />\r\n            <BurgerConstructor />\r\n          </Route>\r\n          <AuthProtectedRoute path=\"/login\">\r\n            <LoginPage />\r\n          </AuthProtectedRoute>\r\n          <AuthProtectedRoute path=\"/register\">\r\n            <RegisterPage />\r\n          </AuthProtectedRoute>\r\n          <AuthProtectedRoute path=\"/forgot-password\">\r\n            <ForgotPasswordPage />\r\n          </AuthProtectedRoute>\r\n          <AuthProtectedRoute path=\"/reset-password\">\r\n            <ResetPasswordPage />\r\n          </AuthProtectedRoute>\r\n          <Route path=\"/feed\" exact={true}>\r\n            <FeedPage />\r\n          </Route>\r\n          <Route path=\"/feed/:id\" exact={true}>\r\n            <OrderInfo />\r\n          </Route>\r\n          <ProtectedRoute path={\"/profile\"}>\r\n            <ProfilePage />\r\n          </ProtectedRoute>\r\n          <Route path=\"/ingredients/:id\" exact={true}>\r\n            <IngredientDetails />\r\n          </Route>\r\n          <Route>\r\n            <ErrorPage404 />\r\n          </Route>\r\n        </Switch>\r\n        {modalIngredientOpen && (\r\n          <Route path=\"/ingredients/:id\">\r\n            <Modal\r\n              visible={!!modalIngredientOpen}\r\n              setFunc={history.goBack}\r\n              headerTitle=\"Детали ингредиента\"\r\n            >\r\n              <IngredientDetails\r\n                setFunc={history.goBack}\r\n                withAddButton={true}\r\n              />\r\n            </Modal>\r\n          </Route>\r\n        )}\r\n        {modalOrderOpen && (\r\n          <>\r\n            <Route path=\"/feed/:id\">\r\n              <Modal\r\n                visible={!!modalOrderOpen}\r\n                setFunc={history.goBack}\r\n                withHeader={false}\r\n              >\r\n                <OrderInfo isModal orderModal={location.state.orderModal} />\r\n              </Modal>\r\n            </Route>\r\n            <Route path=\"/profile/orders/:id\">\r\n              <Modal\r\n                visible={!!modalOrderOpen}\r\n                setFunc={history.goBack}\r\n                withHeader={false}\r\n              >\r\n                <OrderInfo isModal orderModal={location.state.orderModal} />\r\n              </Modal>\r\n            </Route>\r\n          </>\r\n        )}\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { Middleware } from \"redux\";\r\nimport { getCookie } from \"../../utils/cookie\";\r\nimport { TWsActions } from \"./action-type\";\r\n\r\nexport const socketMiddleware = (\r\n  wsUrl: string,\r\n  wsActions: typeof TWsActions\r\n): Middleware<{}> => {\r\n  return (store) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return (next) => (action) => {\r\n      const { dispatch } = store;\r\n      const { type, withToken } = action;\r\n      const { wsInit, onOpen, onClose, onError, onMessage } = wsActions;\r\n      const accessCookie = getCookie(\"accessToken\");\r\n      const token = withToken ? accessCookie : \"\";\r\n\r\n      if (type === wsInit) {\r\n        socket = new WebSocket(\r\n          withToken ? `${wsUrl}?token=${token}` : `${wsUrl}/all`\r\n        );\r\n      }\r\n      if (socket) {\r\n        socket.onopen = (event) => {\r\n          dispatch({ type: onOpen, payload: event });\r\n        };\r\n\r\n        socket.onerror = (event) => {\r\n          dispatch({ type: onError, wsError: event });\r\n        };\r\n\r\n        socket.onmessage = (event) => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n\r\n          dispatch({ type: onMessage, messages: parsedData });\r\n        };\r\n\r\n        socket.onclose = (event) => {\r\n          dispatch({ type: onClose, payload: event });\r\n        };\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  };\r\n};\r\n","import { SERVER_URL } from \"../../utils/constants\";\r\nimport {\r\n  IngredientsSuccessAction,\r\n  IngredientsRequestAction,\r\n  IngredientsFailedAction,\r\n} from \"./action-types\";\r\nimport { AppDispatch } from \"../../types\";\r\n\r\nexport function getItems() {\r\n  return async function (dispatch: AppDispatch) {\r\n    dispatch(IngredientsRequestAction());\r\n    // Запрашиваем данные у сервера\r\n    try {\r\n      const res = await fetch(`${SERVER_URL}/ingredients`);\r\n      // @ts-ignore\r\n      const isJson =\r\n        // @ts-ignore\r\n        res.headers.get(\"content-type\").indexOf(\"application/json\") !== -1;\r\n      if (!res.ok) {\r\n        dispatch(IngredientsFailedAction());\r\n        throw new Error(\"Ответ сети не ok\");\r\n      }\r\n      if (!isJson) {\r\n        dispatch(IngredientsFailedAction());\r\n        throw new Error(\"Ответ сети не json\");\r\n      }\r\n      const { data } = await res.json();\r\n      dispatch(IngredientsSuccessAction(data));\r\n    } catch (error: any) {\r\n      console.log(error.message);\r\n      dispatch(IngredientsFailedAction());\r\n    }\r\n  };\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { LOAD_ITEMS, LOAD_ITEMS_SUCCESS, LOAD_ITEMS_FAILED } from \"./constants\";\r\nimport { TProduct } from \"../../types/data\";\r\nimport { TIngredient } from \"./action-types\";\r\n\r\nexport type TInitialStateIngredients = {\r\n  ingredients: TProduct[] | [];\r\n  ingredientsRequest: boolean;\r\n  ingredientsFailed: boolean;\r\n};\r\nconst initialState: TInitialStateIngredients = {\r\n  ingredients: [],\r\n  ingredientsRequest: false,\r\n  ingredientsFailed: false,\r\n};\r\n\r\nexport const ingredientsReducer = (\r\n  state = initialState,\r\n  action: TIngredient\r\n): TInitialStateIngredients => {\r\n  switch (action.type) {\r\n    case LOAD_ITEMS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ingredients: action.data,\r\n        ingredientsRequest: false,\r\n        ingredientsFailed: false,\r\n      };\r\n    }\r\n    case LOAD_ITEMS: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: true,\r\n        ingredientsFailed: false,\r\n      };\r\n    }\r\n    case LOAD_ITEMS_FAILED: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: false,\r\n        ingredientsFailed: true,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  ADD_BUN,\r\n  ADD_INGREDIENT,\r\n  REMOVE_INGREDIENT,\r\n  RESET_CONSTRUCTOR,\r\n  UPDATE_CONSTRUCTOR,\r\n} from \"./constants\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport update from \"immutability-helper\";\r\nimport { TProduct } from \"../../types/data\";\r\nimport { TConstructor } from \"./action-type\";\r\n\r\nexport type TInitialStateConstructor = {\r\n  bun: TProduct | null;\r\n  ingredients: TProduct[];\r\n};\r\nconst initialState: TInitialStateConstructor = {\r\n  bun: null,\r\n  ingredients: [],\r\n};\r\n\r\nexport const constructorReducer = (\r\n  state = initialState,\r\n  action: TConstructor\r\n): TInitialStateConstructor => {\r\n  switch (action.type) {\r\n    case ADD_BUN: {\r\n      return {\r\n        ...state,\r\n        bun: { ...action.bun, uuid: uuidv4() },\r\n      };\r\n    }\r\n    case ADD_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        ingredients: [\r\n          ...state.ingredients,\r\n          { ...action.ingredient, uuid: uuidv4() },\r\n        ],\r\n      };\r\n    }\r\n    case REMOVE_INGREDIENT: {\r\n      const { _id } = action.ingredient;\r\n      let deleted = false;\r\n      return {\r\n        ...state,\r\n        ingredients: state.ingredients.filter(el => {\r\n          if (el._id === _id && !deleted) {\r\n            deleted = true;\r\n            return false;\r\n          }\r\n          return true;\r\n        }),\r\n      };\r\n    }\r\n    case RESET_CONSTRUCTOR: {\r\n      return {\r\n        bun: null,\r\n        ingredients: [],\r\n      };\r\n    }\r\n    case UPDATE_CONSTRUCTOR: {\r\n      const { dragIndex, hoverIndex } = action.value;\r\n      const dragCard = state.ingredients[dragIndex];\r\n      return {\r\n        ...state,\r\n        ingredients: update(state.ingredients, {\r\n          $splice: [\r\n            [dragIndex, 1],\r\n            [hoverIndex, 0, dragCard],\r\n          ],\r\n        }),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_FAILED,\r\n} from \"./constants\";\r\nimport { TOrderCreated } from \"../../types/data\";\r\nimport { TOrder } from \"./action-type\";\r\n\r\nexport type TInitialStateOrder = {\r\n  orderInfo: TOrderCreated | null;\r\n  orderRequest: boolean;\r\n  orderFailed: boolean;\r\n};\r\nconst initialState: TInitialStateOrder = {\r\n  orderInfo: null,\r\n  orderRequest: false,\r\n  orderFailed: false,\r\n};\r\n\r\nexport const orderReducer = (\r\n  state = initialState,\r\n  action: TOrder\r\n): TInitialStateOrder => {\r\n  switch (action.type) {\r\n    case CREATE_ORDER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orderInfo: action.order,\r\n      };\r\n    }\r\n    case CREATE_ORDER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        orderRequest: true,\r\n        orderFailed: false,\r\n      };\r\n    }\r\n    case CREATE_ORDER_FAILED: {\r\n      return {\r\n        ...state,\r\n        orderFailed: true,\r\n        orderRequest: false,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { TUser } from \"../../types/data\";\r\nimport { TAuth } from \"./action-type\";\r\nimport {\r\n  SET_USER_DATA,\r\n  SET_AUTH_CHECKING,\r\n  SET_REGISTER_SENDING,\r\n  SET_REGISTER_SEND_ERROR,\r\n  SET_LOGIN_SENDING,\r\n  SET_LOGIN_SEND_ERROR,\r\n  SET_PASSWORD_FORGOT_EMAIL_SEND,\r\n  SET_PASSWORD_FORGOT_CHANGED,\r\n  SET_RESET_PASSWORD_FORGOT_ERROR,\r\n  RESET_PASSWORD_FORGOT,\r\n} from \"./constants\";\r\n\r\nexport type TInitialStateAuth = {\r\n  data: TUser | null;\r\n  authChecking: boolean;\r\n  registerSending: boolean;\r\n  loginSending: boolean;\r\n  loginError: string;\r\n  registerError: string;\r\n  forgotPassword: {\r\n    emailSend: boolean;\r\n    passwordChanged: boolean;\r\n    message: string;\r\n    errorMessage: string;\r\n  };\r\n};\r\nconst initialState: TInitialStateAuth = {\r\n  data: null,\r\n  authChecking: true,\r\n  registerSending: false,\r\n  registerError: \"\",\r\n  loginSending: false,\r\n  loginError: \"\",\r\n  forgotPassword: {\r\n    emailSend: false,\r\n    passwordChanged: false,\r\n    message: \"\",\r\n    errorMessage: \"\",\r\n  },\r\n};\r\n\r\nexport const authReducer = (\r\n  state = initialState,\r\n  action: TAuth\r\n): TInitialStateAuth => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return { ...state, data: action.data };\r\n    case SET_AUTH_CHECKING:\r\n      return { ...state, authChecking: action.authChecking };\r\n    case SET_REGISTER_SENDING:\r\n      return { ...state, registerSending: action.registerSending };\r\n    case SET_REGISTER_SEND_ERROR:\r\n      return { ...state, registerError: action.registerError };\r\n    case SET_LOGIN_SENDING:\r\n      return { ...state, loginSending: action.loginSending };\r\n    case SET_LOGIN_SEND_ERROR:\r\n      return { ...state, loginError: action.loginError };\r\n    case SET_PASSWORD_FORGOT_EMAIL_SEND:\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          ...state.forgotPassword,\r\n          emailSend: action.payload.emailSend,\r\n          passwordChanged: false,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n    case SET_PASSWORD_FORGOT_CHANGED:\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          ...state.forgotPassword,\r\n          emailSend: false,\r\n          errorMessage: \"\",\r\n          passwordChanged: action.payload.passwordChanged,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n    case RESET_PASSWORD_FORGOT:\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          message: \"\",\r\n          emailSend: false,\r\n          passwordChanged: false,\r\n          errorMessage: \"\",\r\n        },\r\n      };\r\n    case SET_RESET_PASSWORD_FORGOT_ERROR:\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          ...state.forgotPassword,\r\n          errorMessage: action.payload.errorMessage,\r\n          passwordChanged: false,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  UPDATE_USER_DATA_ERROR,\r\n  UPDATE_USER_DATA_SEND,\r\n  UPDATE_USER_DATA,\r\n} from \"./constants\";\r\nimport { TUserUnion } from \"./actions-type\";\r\nimport { TUser } from \"../../types/data\";\r\n\r\nexport type TInitialStateUser = {\r\n  data: {\r\n    status: boolean;\r\n    user: TUser;\r\n  } | null;\r\n  userUpdateSending: boolean;\r\n  userUpdateError: boolean;\r\n};\r\nconst initialState: TInitialStateUser = {\r\n  data: null,\r\n  userUpdateSending: false,\r\n  userUpdateError: false,\r\n};\r\n\r\nexport const currentUserReducer = (\r\n  state = initialState,\r\n  action: TUserUnion\r\n): TInitialStateUser => {\r\n  switch (action.type) {\r\n    case UPDATE_USER_DATA_SEND:\r\n      return {\r\n        ...state,\r\n        data: { status: action.payload.success, user: action.payload.user },\r\n      };\r\n    case UPDATE_USER_DATA:\r\n      return {\r\n        ...state,\r\n        userUpdateSending: action.payload,\r\n        userUpdateError: false,\r\n      };\r\n    case UPDATE_USER_DATA_ERROR:\r\n      return {\r\n        ...state,\r\n        userUpdateError: action.payload,\r\n        userUpdateSending: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { TOrderInfo } from \"../../types/data\";\r\nimport { TWs } from \"./action-type\";\r\nimport {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n} from \"./constants\";\r\n\r\nexport type TInitialState = {\r\n  wsConnected: boolean;\r\n  wsError: boolean;\r\n  messages: {\r\n    success: boolean;\r\n    orders: TOrderInfo[] | null;\r\n    total: number;\r\n    totalToday: number;\r\n  } | null;\r\n};\r\nconst initialState: TInitialState = {\r\n  wsConnected: false,\r\n  wsError: false,\r\n  messages: null,\r\n};\r\n\r\nexport const wsReducer = (state = initialState, action: TWs) => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        wsError: false,\r\n        wsConnected: true,\r\n      };\r\n\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        wsError: action.wsError,\r\n        wsConnected: false,\r\n      };\r\n\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        wsError: false,\r\n        wsConnected: false,\r\n      };\r\n\r\n    case WS_GET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        wsError: false,\r\n        messages: action.messages,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { ingredientsReducer } from \"./ingredients/reducer\";\r\nimport { constructorReducer } from \"./constructor/reducer\";\r\nimport { orderReducer } from \"./order/reducer\";\r\nimport { authReducer } from \"./auth/reducer\";\r\nimport { currentUserReducer } from \"./user/reducer\";\r\nimport { wsReducer } from \"./websoket/reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  ingredients: ingredientsReducer,\r\n  constructorBurger: constructorReducer,\r\n  order: orderReducer,\r\n  auth: authReducer,\r\n  currentUser: currentUserReducer,\r\n  orders: wsReducer,\r\n});\r\n","import { TOrderInfo } from \"../../types/data\";\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n} from \"./constants\";\r\n\r\nexport interface IWsConnectionStart {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n}\r\nexport interface IWsConnectionSuccess {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\nexport interface IWsConnectionError {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n  wsError: any;\r\n}\r\nexport interface IWsConnectionClosed {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\nexport interface IWsConnectionMsg {\r\n  readonly type: typeof WS_GET_MESSAGE;\r\n  messages: TOrderInfo[];\r\n}\r\n\r\nexport type TWs =\r\n  | IWsConnectionStart\r\n  | IWsConnectionSuccess\r\n  | IWsConnectionError\r\n  | IWsConnectionClosed\r\n  | IWsConnectionMsg;\r\n\r\nexport const wsConnectionStart = (): IWsConnectionStart => ({\r\n  type: WS_CONNECTION_START,\r\n});\r\n\r\nexport const wsConnectionClosed = (): IWsConnectionClosed => ({\r\n  type: WS_CONNECTION_CLOSED,\r\n});\r\n\r\nexport const wsConnectionMsg = (messages: TOrderInfo[]): IWsConnectionMsg => ({\r\n  type: WS_GET_MESSAGE,\r\n  messages,\r\n});\r\n\r\nexport const wsConnectionError = (wsError: any): IWsConnectionError => ({\r\n  type: WS_CONNECTION_ERROR,\r\n  wsError,\r\n});\r\n\r\nexport const TWsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_MESSAGE,\r\n};\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { rootReducer } from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { WS_URL } from \"../utils/constants\";\r\nimport { TWsActions } from \"./websoket/action-type\";\r\nimport { socketMiddleware } from \"./websoket/socketMiddleware\";\r\n\r\nconst composeEnhancers =\r\n  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk, socketMiddleware(WS_URL, TWsActions))\r\n);\r\nexport default createStore(rootReducer, enhancer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./services/store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <DndProvider backend={HTML5Backend}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </DndProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileSidebar\":\"profile-sidebar_profileSidebar__37uyk\",\"sidebar\":\"profile-sidebar_sidebar__2UP9Y\",\"sidebarItem\":\"profile-sidebar_sidebarItem__1FcFE\",\"sidebarLink\":\"profile-sidebar_sidebarLink__3o2Sy\",\"sidebarLinkCurrent\":\"profile-sidebar_sidebarLinkCurrent__16ECo\",\"sidebarSubText\":\"profile-sidebar_sidebarSubText__f67Ts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__2FmtH\",\"headerContainer\":\"app-header_headerContainer__eNjFx\",\"headerLink\":\"app-header_headerLink__2cIaM pt-4 pb-4 pr-5 pl-5\",\"active\":\"app-header_active__2KVmy\",\"headerMenu\":\"app-header_headerMenu__3lV-_\",\"logoWrap\":\"app-header_logoWrap__1dL5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"order-list_orderList__3Mra_\",\"orderItem\":\"order-list_orderItem__2scsL\",\"orderItemHeader\":\"order-list_orderItemHeader__frKza\",\"orderStatus\":\"order-list_orderStatus__GyrTz\",\"ready\":\"order-list_ready__n7Kvj\",\"orderItemInfo\":\"order-list_orderItemInfo__1Dt3y\",\"orderItemPrice\":\"order-list_orderItemPrice__Usagh\",\"orderItemPriceNum\":\"order-list_orderItemPriceNum__3Zr58\",\"ingredientsList\":\"order-list_ingredientsList__2WYkl\",\"ingredientsListItem\":\"order-list_ingredientsListItem__njujF\",\"ingredientsListItemCount\":\"order-list_ingredientsListItemCount__1k9rW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2ze1Y\",\"show\":\"modal_show__1TJlo\",\"modalBody\":\"modal_modalBody__2YQ8v\",\"modalOverlay\":\"modal_modalOverlay__2dm26\",\"modalHeader\":\"modal_modalHeader__LkdWl\",\"modalCloseBtn\":\"modal_modalCloseBtn__32tlt\",\"modalContent\":\"modal_modalContent__2nJvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-details_container__29RpS\",\"ImgWrap\":\"ingredient-details_ImgWrap__OSn1n\",\"statList\":\"ingredient-details_statList__GJ_4R\",\"statItem\":\"ingredient-details_statItem__1KFOz\",\"statName\":\"ingredient-details_statName__3MyI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"page_wrap__33hR3\",\"form\":\"page_form__3URSn\",\"formTitle\":\"page_formTitle__15xLT\",\"formField\":\"page_formField__PdRRr\",\"formFieldNewPassword\":\"page_formFieldNewPassword__3KEeS\",\"formButtonsContainer\":\"page_formButtonsContainer__k7SXe\",\"formButton\":\"page_formButton__iuziA\",\"formResetBtn\":\"page_formResetBtn__3Az4W\",\"formLinkItem\":\"page_formLinkItem__36vXa\",\"formLink\":\"page_formLink__3PuKZ\",\"formErrorMsg\":\"page_formErrorMsg__3D1Lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile_profileContainer__32ntB\",\"profileOrders\":\"profile_profileOrders__32ToE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__KM0Vg\",\"flex\":\"app_flex__3xbDE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__3m3dz\",\"pulse\":\"preloader_pulse__2S_xT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order_order__1onRw\"};"],"sourceRoot":""}